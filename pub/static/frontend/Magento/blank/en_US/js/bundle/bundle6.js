require.config({"config": {
        "jsbuild":{"Mageplaza_SocialLogin/js/popup.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license that is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category  Mageplaza\r\n * @package   Mageplaza_SocialLogin\r\n * @copyright Copyright (c) Mageplaza (https://www.mageplaza.com/)\r\n * @license   https://www.mageplaza.com/LICENSE.txt\r\n */\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'Magento_Customer/js/customer-data',\r\n        'mage/translate',\r\n        'Magento_Ui/js/modal/modal',\r\n        'Mageplaza_Core/js/jquery.magnific-popup.min'\r\n    ], function ($, customerData, $t, modal) {\r\n        'use strict';\r\n\r\n        $.widget(\r\n            'mageplaza.socialpopup', {\r\n                options: {\r\n                    /*General*/\r\n                    popup: '#social-login-popup',\r\n                    popupEffect: '',\r\n                    headerLink: '.header .links, .section-item-content .header.links',\r\n                    ajaxLoading: '#social-login-popup .ajax-loading',\r\n                    loadingClass: 'social-login-ajax-loading',\r\n                    errorMsgClass: 'message-error error message',\r\n                    successMsgClass: 'message-success success message',\r\n                    /*Login*/\r\n                    loginFormContainer: '.social-login.authentication',\r\n                    loginFormContent: '.social-login.authentication .social-login-customer-authentication .block-content',\r\n                    loginForm: '#social-form-login',\r\n                    loginBtn: '#bnt-social-login-authentication',\r\n                    forgotBtn: '#social-form-login .action.remind',\r\n                    createBtn: '#social-form-login .action.create',\r\n                    formLoginUrl: '',\r\n                    /*Email*/\r\n                    emailFormContainer: '.social-login.fake-email',\r\n                    fakeEmailSendBtn: '#social-form-fake-email .action.send',\r\n                    fakeEmailType: '',\r\n                    fakeEmailFrom: '#social-form-fake-email',\r\n                    fakeEmailFormContent: '.social-login.fake-email .block-content',\r\n                    fakeEmailUrl: '',\r\n                    fakeEmailCancelBtn: '#social-form-fake-email .action.cancel',\r\n                    /*Forgot*/\r\n                    forgotFormContainer: '.social-login.forgot',\r\n                    forgotFormContent: '.social-login.forgot .block-content',\r\n                    forgotForm: '#social-form-password-forget',\r\n                    forgotSendBtn: '#social-form-password-forget .action.send',\r\n                    forgotBackBtn: '#social-form-password-forget .action.back',\r\n                    forgotFormUrl: '',\r\n                    /*Create*/\r\n                    createFormContainer: '.social-login.create',\r\n                    createFormContent: '.social-login.create .block-content',\r\n                    createForm: '#social-form-create',\r\n                    createAccBtn: '#social-form-create .action.create',\r\n                    createBackBtn: '#social-form-create .action.back',\r\n                    createFormUrl: '',\r\n                    showFields: '',\r\n                    availableFields: ['name', 'email', 'password'],\r\n                    condition: false,\r\n                    popupLogin: false,\r\n                    actionName: '',\r\n                    firstName: '',\r\n                    lastName: ','\r\n                },\r\n\r\n                /**\r\n                 * @private\r\n                 */\r\n                _create: function () {\r\n                    var self = this;\r\n                    this.initObject();\r\n                    this.initLink();\r\n                    this.initObserve();\r\n                    this.replaceAuthModal();\r\n                    this.hideFieldOnPopup();\r\n                    window.fakeEmailCallback = function (type, firstname, lastname) {\r\n                        self.options.fakeEmailType = type;\r\n                        self.options.firstName     = firstname;\r\n                        self.options.lastName      = lastname;\r\n                        self.showEmail();\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Init object will be used\r\n                 */\r\n                initObject: function () {\r\n                    this.loginForm  = $(this.options.loginForm);\r\n                    this.createForm = $(this.options.createForm);\r\n                    this.forgotForm = $(this.options.forgotForm);\r\n\r\n                    this.forgotFormContainer = $(this.options.forgotFormContainer);\r\n                    this.createFormContainer = $(this.options.createFormContainer);\r\n                    this.loginFormContainer  = $(this.options.loginFormContainer);\r\n\r\n                    this.loginFormContent  = $(this.options.loginFormContent);\r\n                    this.forgotFormContent = $(this.options.forgotFormContent);\r\n                    this.createFormContent = $(this.options.createFormContent);\r\n\r\n                    this.emailFormContainer   = $(this.options.emailFormContainer);\r\n                    this.fakeEmailFrom        = $(this.options.fakeEmailFrom);\r\n                    this.fakeEmailFormContent = $(this.options.fakeEmailFormContent);\r\n                },\r\n\r\n                /**\r\n                 * Init links login\r\n                 */\r\n                initLink: function () {\r\n                    var self       = this,\r\n                        headerLink = $(this.options.headerLink);\r\n\r\n                    if (headerLink.length && self.options.popupLogin) {\r\n                        headerLink.find('a').each(\r\n                            function (link) {\r\n                                var el   = $(this),\r\n                                    href = el.attr('href');\r\n\r\n                                if (typeof href !== 'undefined' && (href.search('customer/account/login') !== -1 || href.search('customer/account/create') !== -1)) {\r\n                                    self.addAttribute(el);\r\n                                    el.on(\r\n                                        'click', function (event) {\r\n                                            if (href.search('customer/account/create') !== -1) {\r\n                                                self.showCreate();\r\n                                            } else {\r\n                                                self.showLogin();\r\n                                            }\r\n\r\n                                            event.preventDefault();\r\n                                        }\r\n                                    );\r\n                                }\r\n                            }\r\n                        );\r\n                        if (self.options.popupLogin === 'popup_login') {\r\n                            self.enablePopup(headerLink, 'a.social-login-btn');\r\n                        }\r\n                    }\r\n\r\n                    this.options.createFormUrl = this.correctUrlProtocol(this.options.createFormUrl);\r\n                    this.options.formLoginUrl  = this.correctUrlProtocol(this.options.formLoginUrl);\r\n                    this.options.forgotFormUrl = this.correctUrlProtocol(this.options.forgotFormUrl);\r\n                    this.options.fakeEmailUrl  = this.correctUrlProtocol(this.options.fakeEmailUrl);\r\n                },\r\n\r\n                /**\r\n                 * Correct url protocol to match with current protocol\r\n                 *\r\n                 * @param   url\r\n                 * @returns {*}\r\n                 */\r\n                correctUrlProtocol: function (url) {\r\n                    var protocol = window.location.protocol;\r\n                    if (!url.includes(protocol)) {\r\n                        url = url.replace(/http:|https:/gi, protocol);\r\n                    }\r\n\r\n                    return url;\r\n                },\r\n\r\n                /**\r\n                 * Init button click\r\n                 */\r\n                initObserve: function () {\r\n                    this.initLoginObserve();\r\n                    this.initCreateObserve();\r\n                    this.initForgotObserve();\r\n                    this.initEmailObserve();\r\n\r\n                    $(this.options.createBtn).on('click', this.showCreate.bind(this));\r\n                    $(this.options.forgotBtn).on('click', this.showForgot.bind(this));\r\n                    $(this.options.createBackBtn).on('click', this.showLogin.bind(this));\r\n                    $(this.options.forgotBackBtn).on('click', this.showLogin.bind(this));\r\n                },\r\n\r\n                /**\r\n                 * Login process\r\n                 */\r\n                initLoginObserve: function () {\r\n                    var self = this;\r\n\r\n                    $(this.options.loginBtn).on('click', this.processLogin.bind(this));\r\n                    this.loginForm.find('input').keypress(\r\n                        function (event) {\r\n                            var code = event.keyCode || event.which;\r\n                            if (code === 13) {\r\n                                self.processLogin();\r\n                            }\r\n                        }\r\n                    );\r\n                },\r\n\r\n                /**\r\n                 * Create process\r\n                 */\r\n                initCreateObserve: function () {\r\n                    var self = this;\r\n\r\n                    $(this.options.createAccBtn).on('click', this.processCreate.bind(this));\r\n                    this.createForm.find('input').keypress(\r\n                        function (event) {\r\n                            var code = event.keyCode || event.which;\r\n                            if (code === 13) {\r\n                                self.processCreate();\r\n                            }\r\n                        }\r\n                    );\r\n                },\r\n\r\n                /**\r\n                 * Forgot process\r\n                 */\r\n                initForgotObserve: function () {\r\n                    var self = this;\r\n\r\n                    $(this.options.forgotSendBtn).on('click', this.processForgot.bind(this));\r\n                    this.forgotForm.find('input').keypress(\r\n                        function (event) {\r\n                            var code = event.keyCode || event.which;\r\n                            if (code === 13) {\r\n                                self.processForgot();\r\n                            }\r\n                        }\r\n                    );\r\n                },\r\n\r\n                /**\r\n                 * Email process\r\n                 */\r\n                initEmailObserve: function () {\r\n                    var self = this;\r\n\r\n                    $(this.options.fakeEmailSendBtn).on('click', this.processEmail.bind(this));\r\n                    this.fakeEmailFrom.find('input').keypress(\r\n                        function (event) {\r\n                            var code = event.keyCode || event.which;\r\n                            if (code === 13) {\r\n                                self.processEmail();\r\n                            }\r\n                        }\r\n                    );\r\n                },\r\n\r\n                /**\r\n                 * Show Login page\r\n                 */\r\n                showLogin: function () {\r\n                    this.reloadCaptcha('login', 50);\r\n                    this.loginFormContainer.show();\r\n                    this.forgotFormContainer.hide();\r\n                    this.createFormContainer.hide();\r\n                    this.emailFormContainer.hide();\r\n                },\r\n\r\n                /**\r\n                 * Show email page\r\n                 */\r\n                showEmail: function () {\r\n                    var wrapper = $('#request-popup'),\r\n                        actions = ['customer_account_login', 'customer_account_create', 'multishipping_checkout_login'];\r\n\r\n                    if (this.options.popupLogin !== 'popup_login') {\r\n                        if (this.options.popupLogin === 'popup_slide') {\r\n                            $('.quick-login-wrapper').modal('closeModal');\r\n                        }\r\n                        var options = {\r\n                            'type': 'popup',\r\n                            'responsive': true,\r\n                            'modalClass': 'request-popup',\r\n                            'buttons': [],\r\n                            'parentModalClass': '_has-modal request-popup-has-modal'\r\n                        };\r\n                        modal(options, wrapper);\r\n                        wrapper.modal('openModal');\r\n                    }\r\n\r\n                    if ($.inArray(this.options.actionName, actions) !== -1) {\r\n                        this.options.popupLogin ? $('.social-login-btn').trigger('click') : wrapper.modal('openModal');\r\n                        this.emailFormContainer.show();\r\n                    }\r\n\r\n                    $('#request-firstname').val(this.options.firstName);\r\n                    $('#request-lastname').val(this.options.lastName);\r\n                    this.emailFormContainer.show();\r\n                    this.loginFormContainer.hide();\r\n                    this.forgotFormContainer.hide();\r\n                    this.createFormContainer.hide();\r\n                },\r\n\r\n                /**\r\n                 * Open Modal\r\n                 */\r\n                openModal: function () {\r\n                },\r\n\r\n                /**\r\n                 * Show create page\r\n                 */\r\n                showCreate: function () {\r\n                    this.reloadCaptcha('create', 50);\r\n                    this.loginFormContainer.hide();\r\n                    this.forgotFormContainer.hide();\r\n                    this.createFormContainer.show();\r\n                    this.emailFormContainer.hide();\r\n                },\r\n\r\n                /**\r\n                 * Show forgot password page\r\n                 */\r\n                showForgot: function () {\r\n                    this.reloadCaptcha('forgot', 50);\r\n                    this.loginFormContainer.hide();\r\n                    this.forgotFormContainer.show();\r\n                    this.createFormContainer.hide();\r\n                    this.emailFormContainer.hide();\r\n                },\r\n\r\n                /**\r\n                 * Reload captcha if enabled\r\n                 *\r\n                 * @param type\r\n                 * @param delay\r\n                 */\r\n                reloadCaptcha: function (type, delay) {\r\n                    if (typeof this.captchaReload === 'undefined') {\r\n                        this.captchaReload = {\r\n                            all: $('#social-login-popup .captcha-reload'),\r\n                            login: $('#social-login-popup .authentication .captcha-reload'),\r\n                            create: $('#social-login-popup .create .captcha-reload'),\r\n                            forgot: $('#social-login-popup .forgot .captcha-reload')\r\n                        };\r\n                    }\r\n\r\n                    if (typeof type === 'undefined') {\r\n                        type = 'all';\r\n                    }\r\n\r\n                    if (this.captchaReload.hasOwnProperty(type) && this.captchaReload[type].length) {\r\n                        if (typeof delay === 'undefined') {\r\n                            this.captchaReload[type].trigger('click');\r\n                        } else {\r\n                            var self = this;\r\n                            setTimeout(\r\n                                function () {\r\n                                    self.captchaReload[type].trigger('click');\r\n                                }, delay\r\n                            );\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Process login\r\n                 */\r\n                processLogin: function () {\r\n                    if (!this.loginForm.valid()) {\r\n                        return;\r\n                    }\r\n\r\n                    var self          = this,\r\n                        options       = this.options,\r\n                        loginData     = {},\r\n                        formDataArray = this.loginForm.serializeArray();\r\n\r\n                    formDataArray.forEach(\r\n                        function (entry) {\r\n                            loginData[entry.name] = entry.value;\r\n                            if (entry.name.includes('user_login')) {\r\n                                loginData['captcha_string']  = entry.value;\r\n                                loginData['captcha_form_id'] = 'user_login';\r\n                            }\r\n                        }\r\n                    );\r\n\r\n                    this.appendLoading(this.loginFormContent);\r\n                    this.removeMsg(this.loginFormContent, options.errorMsgClass);\r\n\r\n                    return $.ajax(\r\n                        {\r\n                            url: options.formLoginUrl,\r\n                            type: 'POST',\r\n                            data: JSON.stringify(loginData)\r\n                        }\r\n                    ).done(\r\n                        function (response) {\r\n                            response.success = !response.errors;\r\n                            self.addMsg(self.loginFormContent, response);\r\n                            if (response.success) {\r\n                                customerData.invalidate(['customer']);\r\n                                if (response.redirectUrl) {\r\n                                    window.location.href = response.redirectUrl;\r\n                                } else {\r\n                                    window.location.reload();\r\n                                }\r\n                            } else {\r\n                                self.reloadCaptcha('login');\r\n                                self.removeLoading(self.loginFormContent);\r\n                            }\r\n                        }\r\n                    ).fail(\r\n                        function () {\r\n                            self.reloadCaptcha('login');\r\n                            self.addMsg(\r\n                                self.loginFormContent, {\r\n                                    message: $t('Could not authenticate. Please try again later'),\r\n                                    success: false\r\n                                }\r\n                            );\r\n                            self.removeLoading(self.loginFormContent);\r\n                        }\r\n                    );\r\n                },\r\n\r\n                /**\r\n                 * Process forgot\r\n                 */\r\n                processForgot: function () {\r\n                    if (!this.forgotForm.valid()) {\r\n                        return;\r\n                    }\r\n\r\n                    var self       = this,\r\n                        options    = this.options,\r\n                        parameters = this.forgotForm.serialize();\r\n\r\n                    this.appendLoading(this.forgotFormContent);\r\n                    this.removeMsg(this.forgotFormContent, options.errorMsgClass);\r\n                    this.removeMsg(this.forgotFormContent, options.successMsgClass);\r\n\r\n                    return $.ajax(\r\n                        {\r\n                            url: options.forgotFormUrl,\r\n                            type: 'POST',\r\n                            data: parameters\r\n                        }\r\n                    ).done(\r\n                        function (response) {\r\n                            self.reloadCaptcha('forgot');\r\n                            self.addMsg(self.forgotFormContent, response);\r\n                            self.removeLoading(self.forgotFormContent);\r\n                        }\r\n                    );\r\n                },\r\n\r\n                /**\r\n                 * Process email\r\n                 */\r\n                processEmail: function () {\r\n                    if (!this.fakeEmailFrom.valid()) {\r\n                        return;\r\n                    }\r\n                    var input = $(\"<input>\")\r\n                    .attr(\"type\", \"hidden\")\r\n                    .attr(\"name\", \"type\").val(this.options.fakeEmailType.toLowerCase());\r\n                    $(this.fakeEmailFrom).append($(input));\r\n\r\n                    var self       = this;\r\n                    var options    = this.options,\r\n                        parameters = this.fakeEmailFrom.serialize();\r\n\r\n                    this.appendLoading(this.fakeEmailFormContent);\r\n                    this.removeMsg(this.fakeEmailFormContent, options.errorMsgClass);\r\n                    this.removeMsg(this.fakeEmailFormContent, options.successMsgClass);\r\n\r\n                    return $.ajax(\r\n                        {\r\n                            url: options.fakeEmailUrl,\r\n                            type: 'POST',\r\n                            data: parameters\r\n                        }\r\n                    ).done(\r\n                        function (response) {\r\n                            self.addMsg(self.fakeEmailFrom, response);\r\n                            self.removeLoading(self.fakeEmailFormContent);\r\n                            if (response.success) {\r\n                                if (response.url === '' || response.url == null) {\r\n                                    window.location.reload(true);\r\n                                } else {\r\n                                    window.location.href = response.url;\r\n                                }\r\n                            }\r\n                        }\r\n                    );\r\n                },\r\n\r\n                /**\r\n                 * Process create account\r\n                 */\r\n                processCreate: function () {\r\n                    if (!this.createForm.valid()) {\r\n                        return;\r\n                    }\r\n\r\n                    var self       = this,\r\n                        options    = this.options,\r\n                        parameters = this.createForm.serialize();\r\n\r\n                    this.appendLoading(this.createFormContent);\r\n                    this.removeMsg(this.createFormContent, options.errorMsgClass);\r\n\r\n                    return $.ajax(\r\n                        {\r\n                            url: options.createFormUrl,\r\n                            type: 'POST',\r\n                            data: parameters\r\n                        }\r\n                    ).done(\r\n                        function (response) {\r\n                            if (response.redirect) {\r\n                                window.location.href = response.redirect;\r\n                            } else if (response.success) {\r\n                                customerData.invalidate(['customer']);\r\n                                self.addMsg(self.createFormContent, response);\r\n                                if (response.url === '' || response.url == null) {\r\n                                    window.location.reload(true);\r\n                                } else {\r\n                                    window.location.href = response.url;\r\n                                }\r\n                            } else {\r\n                                self.reloadCaptcha('create');\r\n                                self.addMsg(self.createFormContent, response);\r\n                                self.removeLoading(self.createFormContent);\r\n                            }\r\n                        }\r\n                    );\r\n                },\r\n\r\n                /**\r\n                 * @param block\r\n                 */\r\n                appendLoading: function (block) {\r\n                    block.css('position', 'relative');\r\n                    block.prepend($(\"<div></div>\", {\"class\": this.options.loadingClass}))\r\n                },\r\n\r\n                /**\r\n                 * @param block\r\n                 */\r\n                removeLoading: function (block) {\r\n                    block.css('position', '');\r\n                    block.find(\".\" + this.options.loadingClass).remove();\r\n                },\r\n\r\n                /**\r\n                 * @param block\r\n                 * @param response\r\n                 */\r\n                addMsg: function (block, response) {\r\n                    var message      = response.message,\r\n                        messageClass = response.success ? this.options.successMsgClass : this.options.errorMsgClass;\r\n\r\n                    if (typeof (message) === 'object' && message.length > 0) {\r\n                        message.forEach(\r\n                            function (msg) {\r\n                                this._appendMessage(block, msg, messageClass);\r\n                            }.bind(this)\r\n                        );\r\n                    } else if (typeof (message) === 'string') {\r\n                        this._appendMessage(block, message, messageClass);\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * @param block\r\n                 * @param messageClass\r\n                 */\r\n                removeMsg: function (block, messageClass) {\r\n                    block.find('.' + messageClass.replace(/ /g, '.')).remove();\r\n                },\r\n\r\n                /**\r\n                 * @param   block\r\n                 * @param   message\r\n                 * @param   messageClass\r\n                 * @private\r\n                 */\r\n                _appendMessage: function (block, message, messageClass) {\r\n                    var currentMessage = null;\r\n                    var messageSection = block.find(\".\" + messageClass.replace(/ /g, '.'));\r\n                    if (!messageSection.length) {\r\n                        block.prepend($('<div></div>', {'class': messageClass}));\r\n                        currentMessage = block.children().first();\r\n                    } else {\r\n                        currentMessage = messageSection.first();\r\n                    }\r\n\r\n                    currentMessage.append($('<div>' + message + '</div>'));\r\n                },\r\n\r\n                /**\r\n                 * Replace Authentication Popup with SL popup\r\n                 */\r\n                replaceAuthModal: function () {\r\n                    var self           = this,\r\n                        cartSummary    = $('.cart-summary'),\r\n                        child_selector = 'button.social-login-btn',\r\n                        cart           = customerData.get('cart'),\r\n                        customer       = customerData.get('customer'),\r\n                        miniCartBtn    = $('#minicart-content-wrapper'),\r\n                        pccBtn         = $('button[data-role = proceed-to-checkout]');\r\n\r\n                    var existCondition = setInterval(\r\n                        function () {\r\n                            if ($('#minicart-content-wrapper #top-cart-btn-checkout').length) {\r\n                                clearInterval(existCondition);\r\n                                if (!customer().firstname && cart().isGuestCheckoutAllowed === false && cart().isReplaceAuthModal) {\r\n                                    self.options.condition = true;\r\n                                }\r\n                                self.addAttribute($('#minicart-content-wrapper #top-cart-btn-checkout'));\r\n                                $('#minicart-content-wrapper').on(\r\n                                    'click', ' #top-cart-btn-checkout', function (event) {\r\n                                        if (self.options.condition) {\r\n                                            self.openModal();\r\n                                            self.showLogin();\r\n                                            event.stopPropagation();\r\n                                        }\r\n                                    }\r\n                                );\r\n                                if (self.options.condition && self.options.popupLogin === 'popup_login') {\r\n                                    self.enablePopup(miniCartBtn, child_selector);\r\n                                }\r\n                            }\r\n                        }, 100\r\n                    );\r\n\r\n                    if (!customer().firstname && cart().isGuestCheckoutAllowed === false && cart().isReplaceAuthModal && pccBtn.length) {\r\n                        pccBtn.replaceWith(\r\n                            '<a title=\"Proceed to Checkout\" class=\"action primary checkout social-login-btn\">' +\r\n                            '<span>Proceed to Checkout</span>' +\r\n                            '</a>'\r\n                        );\r\n                        if (self.options.popupLogin === 'popup_login') {\r\n                            self.addAttribute($('a.checkout.social-login-btn'));\r\n                            self.enablePopup(cartSummary, 'a.social-login-btn');\r\n                        }\r\n                    }\r\n                },\r\n\r\n                /**\r\n                 * Add attribute to element\r\n                 *\r\n                 * @param element\r\n                 */\r\n                addAttribute: function (element) {\r\n                    var self = this;\r\n                    element.addClass('social-login-btn');\r\n                    element.attr('href', self.options.popup);\r\n                    element.attr('data-effect', self.options.popupEffect);\r\n                },\r\n\r\n                /**\r\n                 *  Enable Magnific Popup\r\n                 *\r\n                 * @param parent_selector\r\n                 * @param child_selector\r\n                 */\r\n                enablePopup: function (parent_selector = null, child_selector = null) {\r\n                    parent_selector.magnificPopup(\r\n                        {\r\n                            delegate: child_selector,\r\n                            removalDelay: 500,\r\n                            callbacks: {\r\n                                beforeOpen: function () {\r\n                                    this.st.mainClass = this.st.el.attr('data-effect');\r\n                                }\r\n                            },\r\n                            midClick: true\r\n                        }\r\n                    );\r\n                },\r\n\r\n                /**\r\n                 * function hide field not allow show on require more information popup\r\n                 * */\r\n                hideFieldOnPopup: function () {\r\n                    var self = this;\r\n                    $.each(\r\n                        self.options.availableFields, function (k, fieldName) {\r\n                            var elField   = $('.field-' + fieldName + '-social'),\r\n                                elConfirm = $('.field-confirmation-social');\r\n                            if (self.options.showFields) {\r\n                                if ($.inArray(fieldName, self.options.showFields.split(',')) === -1) {\r\n                                    if (fieldName === 'password') {\r\n                                        elConfirm.remove();\r\n                                    }\r\n                                    elField.remove();\r\n                                } else {\r\n                                    elField.show();\r\n                                }\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        );\r\n\r\n        return $.mageplaza.socialpopup;\r\n    }\r\n);","Mageplaza_SocialLogin/js/proceed-to-checkout.js":"/**\r\n * Copyright \u00a9 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine(\r\n    [\r\n    'jquery',\r\n    'Magento_Customer/js/model/authentication-popup',\r\n    'Magento_Customer/js/customer-data',\r\n    ], function ($, authenticationPopup, customerData) {\r\n        'use strict';\r\n\r\n        return function (config, element) {\r\n            var el = $(element);\r\n            el.click(\r\n                function (event) {\r\n                    var cart = customerData.get('cart'),\r\n                    customer = customerData.get('customer');\r\n                    event.preventDefault();\r\n                    if (!customer().firstname && cart().isGuestCheckoutAllowed === false) {\r\n                        if (parseInt(cart().isReplaceAuthModal) !== 1) {\r\n                            authenticationPopup.showModal();\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    $(element).attr('disabled', true);\r\n                    location.href = config.checkoutUrl;\r\n                }\r\n            );\r\n        };\r\n    }\r\n);\r\n","Mageplaza_SocialLogin/js/provider.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license that is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n * What I found in my quick research is:\r\n\r\n\r\nIn magento 1 it was quite easy to get the admin session on frontend since magento had no restrictions when it expose the admin session cookie.\r\n\r\n\r\n\r\nBut in magento2, the admin cookie will get exposed only for the admin path, for example /admin, because of this, you won't be able to access the admin session on frontend.\r\n\r\n\r\n\r\nBut as an alternate solution, you can try:\r\n\r\nBuild an admin route & a controller for you module\r\nWhen frontend loads, send an ajax request to the admin controller and check the auth for isLoggedIn()\r\nInitialize your plugin / related code via JS through ajax callback.\r\n *\r\n * @category  Mageplaza\r\n * @package   Mageplaza_SocialLogin\r\n * @copyright Copyright (c) Mageplaza (https://www.mageplaza.com/)\r\n * @license   https://www.mageplaza.com/LICENSE.txt\r\n */\r\n\r\ndefine(\r\n    [\r\n    'jquery',\r\n    'Magento_Customer/js/customer-data'\r\n    ], function ($, customerData) {\r\n        'use strict';\r\n\r\n        /**\r\n         * @param url\r\n         * @param windowObj\r\n         */\r\n        window.socialCallback = function (url, windowObj) {\r\n            customerData.invalidate(['customer']);\r\n            customerData.reload(['customer'], true);\r\n\r\n            if (url !== '') {\r\n                window.location.href = url;\r\n            } else {\r\n                window.location.reload(true);\r\n            }\r\n\r\n            windowObj.close();\r\n        };\r\n\r\n        return function (config, element) {\r\n            var model = {\r\n                initialize: function () {\r\n                    var self = this;\r\n                    $(element).on(\r\n                        'click', function () {\r\n                            self.openPopup();\r\n                        }\r\n                    );\r\n                },\r\n\r\n                openPopup: function () {\r\n                    window.open(config.url, config.label, this.getPopupParams());\r\n                },\r\n\r\n                getPopupParams: function (w, h, l, t) {\r\n                    this.screenX = typeof window.screenX !== 'undefined' ? window.screenX : window.screenLeft;\r\n                    this.screenY = typeof window.screenY !== 'undefined' ? window.screenY : window.screenTop;\r\n                    this.outerWidth = typeof window.outerWidth !== 'undefined' ? window.outerWidth : document.body.clientWidth;\r\n                    this.outerHeight = typeof window.outerHeight !== 'undefined' ? window.outerHeight : (document.body.clientHeight - 22);\r\n                    this.width = w ? w : 500;\r\n                    this.height = h ? h : 420;\r\n                    this.left = l ? l : parseInt(this.screenX + ((this.outerWidth - this.width) / 2), 10);\r\n                    this.top = t ? t : parseInt(this.screenY + ((this.outerHeight - this.height) / 2.5), 10);\r\n\r\n                    return (\r\n                    'width=' + this.width +\r\n                    ',height=' + this.height +\r\n                    ',left=' + this.left +\r\n                    ',top=' + this.top\r\n                    );\r\n                }\r\n            };\r\n            model.initialize();\r\n\r\n            return model;\r\n        };\r\n    }\r\n);\r\n","Mageplaza_SocialLogin/js/view/authentication.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license that is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category  Mageplaza\r\n * @package   Mageplaza_SocialLoginPro\r\n * @copyright Copyright (c) Mageplaza (https://www.mageplaza.com/)\r\n * @license   https://www.mageplaza.com/LICENSE.txt\r\n */\r\n\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'ko',\r\n        'uiComponent',\r\n        'Magento_Customer/js/model/customer',\r\n        'mage/translate',\r\n        'Magento_Ui/js/modal/modal',\r\n        'rjsResolver'\r\n    ],\r\n    function ($, ko, Component, customer, $t, modal, resolver) {\r\n        'use strict';\r\n        return Component.extend(\r\n            {\r\n                defaults: {\r\n                    template: 'Mageplaza_SocialLoginPro/authentication'\r\n                },\r\n\r\n                /**\r\n                 * Init\r\n                 */\r\n                initialize: function () {\r\n                    var self = this;\r\n                    this._super();\r\n                    this.popup   = $('#social-login-popup');\r\n                    this.wrapper = $('.quick-login-wrapper');\r\n\r\n                    resolver(\r\n                        function () {\r\n\r\n                            if (self.popup.length !== 0 || self.wrapper.length !== 0) {\r\n                                $('.authentication-wrapper button').replaceWith(\r\n                                    '    <a class=\"action action-auth-toggle\">\\n' +\r\n                                    '        <span data-bind=\"i18n: \\'Sign In\\'\">Sign In</span>\\n' +\r\n                                    '    </a>'\r\n                                );\r\n\r\n                                var el = $('.authentication-wrapper a');\r\n                                el.addClass('social-login-btn');\r\n                                el.css('cursor', 'pointer');\r\n                            }\r\n\r\n                            if (self.popup.length !== 0) {\r\n                                el.attr('href', '#social-login-popup');\r\n                                el.on('click', function () {\r\n                                    self.popup.socialpopup('showLogin');\r\n                                    self.popup.socialpopup('loadApi');\r\n                                });\r\n\r\n                                $('.authentication-wrapper').magnificPopup(\r\n                                    {\r\n                                        delegate: 'a.social-login-btn',\r\n                                        removalDelay: 500,\r\n                                        midClick: true\r\n                                    }\r\n                                );\r\n                            }\r\n\r\n                            if (self.wrapper.length !== 0) {\r\n                                el.on(\r\n                                    'click', function (event) {\r\n                                        self.wrapper.socialpopup('showLogin');\r\n                                        self.wrapper.socialpopup('openModal');\r\n                                        event.stopPropagation();\r\n                                    }\r\n                                );\r\n                            }\r\n                        }\r\n                    );\r\n\r\n                    return this;\r\n                },\r\n                /**\r\n                 * Is login form enabled for current customer\r\n                 */\r\n                isActive: function () {\r\n                    return !customer.isLoggedIn();\r\n                }\r\n            }\r\n        );\r\n    }\r\n);\r\n","Mageplaza_SocialLogin/js/view/social-buttons.js":"/**\r\n * Mageplaza\r\n *\r\n * NOTICE OF LICENSE\r\n *\r\n * This source file is subject to the Mageplaza.com license that is\r\n * available through the world-wide-web at this URL:\r\n * https://www.mageplaza.com/LICENSE.txt\r\n *\r\n * DISCLAIMER\r\n *\r\n * Do not edit or add to this file if you wish to upgrade this extension to newer\r\n * version in the future.\r\n *\r\n * @category  Mageplaza\r\n * @package   Mageplaza_SocialLogin\r\n * @copyright Copyright (c) Mageplaza (https://www.mageplaza.com/)\r\n * @license   https://www.mageplaza.com/LICENSE.txt\r\n */\r\n/*jshint browser:true jquery:true*/\r\n/*global alert*/\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'ko',\r\n        'uiComponent',\r\n        'socialProvider'\r\n    ],\r\n    function ($, ko, Component, socialProvider) {\r\n        'use strict';\r\n\r\n        /**\r\n         * @type {{init: ko.bindingHandlers.socialButton.init}}\r\n         */\r\n        ko.bindingHandlers.socialButton = {\r\n            init: function (element, valueAccessor, allBindings) {\r\n                var config = {\r\n                    url: allBindings.get('url'),\r\n                    label: allBindings.get('label')\r\n                };\r\n\r\n                socialProvider(config, element);\r\n            }\r\n        };\r\n\r\n        return Component.extend(\r\n            {\r\n                defaults: {\r\n                    template: 'Mageplaza_SocialLogin/social-buttons'\r\n                },\r\n                buttonLists: window.socialAuthenticationPopup,\r\n\r\n                /**\r\n                 * @returns {Array}\r\n                 */\r\n                socials: function () {\r\n                    var socials = [];\r\n                    $.each(\r\n                        this.buttonLists, function (key, social) {\r\n                            socials.push(social);\r\n                        }\r\n                    );\r\n\r\n                    return socials;\r\n                },\r\n\r\n                /**\r\n                 * @returns {boolean}\r\n                 */\r\n                isActive: function () {\r\n                    return (typeof this.buttonLists !== 'undefined');\r\n                }\r\n            }\r\n        );\r\n    }\r\n);\r\n","MageWorx_SearchSuiteAutocomplete/js/autocomplete.js":"define([\n    'jquery',\n    'uiComponent',\n    'ko'\n], function ($, Component, ko) {\n    'use strict';\n\n\n    return Component.extend({\n        defaults: {\n            template: 'MageWorx_SearchSuiteAutocomplete/autocomplete',\n            addToCartFormSelector: '[data-role=searchsuiteautocomplete-tocart-form]',\n            showPopup: ko.observable(false),\n            result: {\n                suggest: {\n                    data: ko.observableArray([])\n                },\n                product: {\n                    data: ko.observableArray([]),\n                    size: ko.observable(0),\n                    url: ko.observable('')\n                }\n            },\n            anyResultCount: false\n        },\n\n\n        initialize: function () {\n            var self = this;\n            this._super();\n\n            this.anyResultCount = ko.computed(function () {\n                var sum = self.result.suggest.data().length + self.result.product.data().length;\n                if (sum > 0) {\n                    return true; }\n                return false;\n            }, this);\n        },\n\n    });\n});\n","MageWorx_SearchSuiteAutocomplete/js/bindEvents.js":"define([\n    'jquery',\n    'uiComponent',\n    'uiRegistry',\n    'mageUtils'\n], function ($, Component, registry, utils) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            minSearchLength: 2\n        },\n\n        initialize: function () {\n            this._super();\n\n            utils.limit(this, 'load', this.searchDelay); // execute 'load' after delay\n\n            $(this.inputSelector)\n                .unbind('input') // unbind all magento events\n                .on('input', $.proxy(this.load, this)) // bind searchsuiteautocomplete load event\n                .on('input', $.proxy(this.searchButtonStatus, this)) // bind show/hide search button event\n                .on('focus', $.proxy(this.showPopup, this)); // bind show popup event\n            $(document).on('click', $.proxy(this.hidePopup, this)); // bind hide popup event\n\n            $(document).ready($.proxy(this.searchButtonStatus, this));\n        },\n\n        load: function (event) {\n            var self = this;\n            var searchText = $(self.inputSelector).val();\n\n            if (searchText.length < self.minSearchLength) {\n                return false;\n            }\n\n            registry.get('searchsuiteautocompleteDataProvider', function (dataProvider) {\n                dataProvider.searchText = searchText;\n                dataProvider.load();\n            });\n        },\n\n        showPopup: function (event) {\n            var self = this,\n                searchField = $(self.inputSelector),\n                searchFieldHasFocus = searchField.is(':focus') && searchField.val().length >= self.minSearchLength;\n\n            registry.get('searchsuiteautocomplete_form', function (autocomplete) {\n                autocomplete.showPopup(searchFieldHasFocus);\n            });\n        },\n\n        hidePopup: function (event) {\n            if ($(this.searchFormSelector).has($(event.target)).length <= 0) {\n                registry.get('searchsuiteautocomplete_form', function (autocomplete) {\n                    autocomplete.showPopup(false);\n                });\n            }\n        },\n\n        searchButtonStatus: function (event) {\n            var self = this,\n                searchField = $(self.inputSelector),\n                searchButton = $(self.searchFormSelector + ' ' + self.searchButtonSelector),\n                searchButtonDisabled = (searchField.val().length > 0) ? false : true;\n\n            searchButton.attr('disabled', searchButtonDisabled);\n        },\n\n        spinnerShow: function () {\n            var spinner = $(this.searchFormSelector);\n            spinner.addClass('loading');\n        },\n\n        spinnerHide: function () {\n            var spinner = $(this.searchFormSelector);\n            spinner.removeClass('loading');\n        }\n\n    });\n});\n","MageWorx_SearchSuiteAutocomplete/js/dataProvider.js":"define([\n    'jquery',\n    'uiComponent',\n    'uiRegistry',\n    'underscore'\n], function ($, Component, registry, _) {\n    'use strict';\n\n    $.Suggestion = function (data) {\n        this.url = data.url;\n        this.title = data.title;\n        this.num_results = data.num_results;\n    };\n\n    $.Product = function (data) {\n        this.name = data.name;\n        this.sku = data.sku;\n        this.image = data.image;\n        this.reviews_rating = data.reviews_rating;\n        this.short_description = data.short_description;\n        this.description = data.description;\n        this.price = data.price;\n        this.url = data.url;\n        this.add_to_cart = data.add_to_cart;\n    };\n\n    return Component.extend({\n        defaults: {\n            localStorage: $.initNamespaceStorage('searchsuiteautocomplete').localStorage,\n            searchText: ''\n        },\n\n        load: function () {\n            var self = this;\n\n            if (this.xhr) {\n                this.xhr.abort();\n            }\n\n            this.xhr = $.ajax({\n                method: \"get\",\n                dataType: \"json\",\n                url: this.url,\n                data: {q: this.searchText},\n                beforeSend: function () {\n                    self.spinnerShow();\n                    if (self.loadFromLocalSorage(self.searchText)) {\n                        self.showPopup();\n                    }\n                },\n                success: $.proxy(function (response) {\n                    self.parseData(response);\n                    self.saveToLocalSorage(response, self.searchText);\n                    self.spinnerHide();\n                    self.showPopup();\n                })\n            });\n        },\n\n        showPopup: function () {\n            registry.get('searchsuiteautocompleteBindEvents', function (binder) {\n                binder.showPopup();\n            });\n        },\n\n        spinnerShow: function () {\n            registry.get('searchsuiteautocompleteBindEvents', function (binder) {\n                binder.spinnerShow();\n            });\n        },\n\n        spinnerHide: function () {\n            registry.get('searchsuiteautocompleteBindEvents', function (binder) {\n                binder.spinnerHide();\n            });\n        },\n\n        parseData: function (response) {\n            this.setSuggested(this.getResponseData(response, 'suggest'));\n            this.setProducts(this.getResponseData(response, 'product'));\n        },\n\n        getResponseData: function (response, code) {\n            var data = []\n\n            if (_.isUndefined(response.result)) {\n                return data;\n            }\n\n            $.each(response.result, function (index, obj) {\n                if (obj.code == code) {\n                    data = obj;\n                }\n            });\n\n            return data;\n        },\n\n        setSuggested: function (suggestedData) {\n            var suggested = [];\n\n            if (!_.isUndefined(suggestedData.data)) {\n                suggested = $.map(suggestedData.data, function (suggestion) {\n                    return new $.Suggestion(suggestion) });\n            }\n\n            registry.get('searchsuiteautocomplete_form', function (autocomplete) {\n                autocomplete.result.suggest.data(suggested);\n            });\n        },\n\n        setProducts: function (productsData) {\n            var products = [];\n\n            if (!_.isUndefined(productsData.data)) {\n                products = $.map(productsData.data, function (product) {\n                    return new $.Product(product)\n                });\n            }\n\n            registry.get('searchsuiteautocomplete_form', function (autocomplete) {\n                autocomplete.result.product.data(products);\n                autocomplete.result.product.size(productsData.size);\n                autocomplete.result.product.url(productsData.url);\n            });\n        },\n\n        loadFromLocalSorage: function (queryText) {\n            if (!this.localStorage) {\n                return;\n            }\n\n            var hash = this._hash(queryText);\n            var data = this.localStorage.get(hash);\n\n            if (!data) {\n                return false;\n            }\n\n            this.parseData(data);\n\n            return true;\n        },\n\n        saveToLocalSorage: function (data, queryText) {\n            if (!this.localStorage) {\n                return;\n            }\n\n            var hash = this._hash(queryText);\n\n            this.localStorage.remove(hash);\n            this.localStorage.set(hash, data);\n        },\n\n        _hash: function (object) {\n            var string = JSON.stringify(object) + \"\";\n\n            var hash = 0, i, chr, len;\n            if (string.length == 0) {\n                return hash;\n            }\n            for (i = 0, len = string.length; i < len; i++) {\n                chr = string.charCodeAt(i);\n                hash = ((hash << 5) - hash) + chr;\n                hash |= 0;\n            }\n            return 'h' + hash;\n        }\n\n    });\n});\n","magnifier/magnifier.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n(function ($) {\n    $.fn.magnify = function (options) {\n        'use strict';\n\n        var magnify = new Magnify($(this), options);\n\n        /* events must be tracked here */\n\n        /**\n         * Return that from _init function\n         *\n         */\n        return magnify;\n    };\n\n    function Magnify(element, options) {\n        var customUserOptions = options || {},\n            $box = $(element),\n            $thumb,\n            that = this,\n            largeWrapper = options.largeWrapper || '.magnifier-preview',\n            $magnifierPreview = $(largeWrapper);\n\n        curThumb = null,\n        magnifierOptions = {\n            x: 0,\n            y: 0,\n            w: 0,\n            h: 0,\n            lensW: 0,\n            lensH: 0,\n            lensBgX: 0,\n            lensBgY: 0,\n            largeW: 0,\n            largeH: 0,\n            largeL: 0,\n            largeT: 0,\n            zoom: 2,\n            zoomMin: 1.1,\n            zoomMax: 5,\n            mode: 'outside',\n            eventType: 'click',\n            status: 0,\n            zoomAttached: false,\n            zoomable: customUserOptions.zoomable !== undefined ?\n                customUserOptions.zoomable\n                : false,\n            onthumbenter: customUserOptions.onthumbenter !== undefined ?\n                customUserOptions.onthumbenter\n                : null,\n            onthumbmove: customUserOptions.onthumbmove !== undefined ?\n                customUserOptions.onthumbmove\n                : null,\n            onthumbleave: customUserOptions.onthumbleave !== undefined ?\n                customUserOptions.onthumbleave\n                : null,\n            onzoom: customUserOptions.onzoom !== undefined ?\n                customUserOptions.onzoom\n                : null\n        },\n        pos = {\n            t: 0,\n            l: 0,\n            x: 0,\n            y: 0\n        },\n        gId = 0,\n        status = 0,\n        curIdx = '',\n        curLens = null,\n        curLarge = null,\n        lensbg = customUserOptions.bg !== undefined ?\n            customUserOptions.lensbg\n            : true,\n        gZoom = customUserOptions.zoom !== undefined ?\n            customUserOptions.zoom\n            : magnifierOptions.zoom,\n        gZoomMin = customUserOptions.zoomMin !== undefined ?\n            customUserOptions.zoomMin\n            : magnifierOptions.zoomMin,\n        gZoomMax = customUserOptions.zoomMax !== undefined ?\n            customUserOptions.zoomMax\n            : magnifierOptions.zoomMax,\n        gMode = customUserOptions.mode || magnifierOptions.mode,\n        gEventType = customUserOptions.eventType || magnifierOptions.eventType,\n        data = {},\n        inBounds = false,\n        isOverThumb = false,\n        rate = 1,\n        paddingX = 0,\n        paddingY = 0,\n        enabled = true,\n        showWrapper = true;\n\n        var MagnifyCls = {\n            magnifyHidden: 'magnify-hidden',\n            magnifyOpaque: 'magnify-opaque',\n            magnifyFull: 'magnify-fullimage'\n        };\n\n        /**\n         * Update Lens positon on.\n         *\n         */\n        that.update = function () {\n            updateLensOnLoad();\n        };\n\n        /**\n         * Init new Magnifier\n         *\n         */\n        that.init = function () {\n            _init($box, options);\n        };\n\n        function _toBoolean(str) {\n            if (typeof str === 'string') {\n                if (str === 'true') {\n                    return true;\n                } else if (str === 'false' || '') {\n                    return false;\n                }\n                console.warn('Wrong type: can\\'t be transformed to Boolean');\n\n            } else if (typeof str === 'boolean') {\n                return str;\n            }\n        }\n\n        function createLens(thumb) {\n            if ($(thumb).siblings('.magnify-lens').length) {\n                return false;\n            }\n            var lens = $('<div class=\"magnify-lens magnify-hidden\" data-gallery-role=\"magnifier-zoom\"></div>');\n\n            $(thumb).parent().append(lens);\n        }\n\n        function updateLensOnLoad(idSelectorMainImg, thumb, largeImgInMagnifyLens, largeWrapper) {\n            var magnifyLensElement= $box.find('.magnify-lens'),\n                textWrapper;\n\n            if (data[idSelectorMainImg].status === 1) {\n                textWrapper = $('<div class=\"magnifier-loader-text\"></div>');\n                magnifyLensElement.className = 'magnifier-loader magnify-hidden';\n                textWrapper.html('Loading...');\n                magnifyLensElement.html('').append(textWrapper);\n            } else if (data[idSelectorMainImg].status === 2) {\n                magnifyLensElement.addClass(MagnifyCls.magnifyHidden);\n                magnifyLensElement.html('');\n\n                largeImgInMagnifyLens.id = idSelectorMainImg + '-large';\n                largeImgInMagnifyLens.style.width = data[idSelectorMainImg].largeImgInMagnifyLensWidth + 'px';\n                largeImgInMagnifyLens.style.height = data[idSelectorMainImg].largeImgInMagnifyLensHeight + 'px';\n                largeImgInMagnifyLens.className = 'magnifier-large magnify-hidden';\n\n                if (data[idSelectorMainImg].mode === 'inside') {\n                    magnifyLensElement.append(largeImgInMagnifyLens);\n                } else {\n                    largeWrapper.html('').append(largeImgInMagnifyLens);\n                }\n            }\n\n            data[idSelectorMainImg].lensH = data[idSelectorMainImg].lensH > $thumb.height() ? $thumb.height() : data[idSelectorMainImg].lensH;\n\n            if (Math.round(data[idSelectorMainImg].lensW) === 0) {\n                magnifyLensElement.css('display', 'none');\n            } else {\n                magnifyLensElement.css({\n                    width: Math.round(data[idSelectorMainImg].lensW) + 'px',\n                    height: Math.round(data[idSelectorMainImg].lensH) + 'px',\n                    display: ''\n                });\n            }\n        }\n\n        function getMousePos() {\n            var xPos = pos.x - magnifierOptions.x,\n                yPos = pos.y - magnifierOptions.y,\n                t,\n                l;\n\n            inBounds =  xPos < 0 || yPos < 0 || xPos > magnifierOptions.w || yPos > magnifierOptions.h  ? false : true;\n\n            l = xPos - magnifierOptions.lensW / 2;\n            t = yPos - magnifierOptions.lensH / 2;\n\n            if (xPos < magnifierOptions.lensW / 2) {\n                l = 0;\n            }\n\n            if (yPos < magnifierOptions.lensH / 2) {\n                t = 0;\n            }\n\n            if (xPos - magnifierOptions.w + Math.ceil(magnifierOptions.lensW / 2) > 0) {\n                l = magnifierOptions.w - Math.ceil(magnifierOptions.lensW + 2);\n            }\n\n            if (yPos - magnifierOptions.h + Math.ceil(magnifierOptions.lensH / 2) > 0) {\n                t = magnifierOptions.h - Math.ceil(magnifierOptions.lensH);\n            }\n\n            pos.l = l;\n            pos.t = t;\n\n            magnifierOptions.lensBgX = pos.l;\n            magnifierOptions.lensBgY = pos.t;\n\n            if (magnifierOptions.mode === 'inside') {\n                magnifierOptions.largeL = Math.round(xPos * (magnifierOptions.zoom - magnifierOptions.lensW / magnifierOptions.w));\n                magnifierOptions.largeT = Math.round(yPos * (magnifierOptions.zoom - magnifierOptions.lensH / magnifierOptions.h));\n            } else {\n                magnifierOptions.largeL = Math.round(magnifierOptions.lensBgX * magnifierOptions.zoom * (magnifierOptions.largeWrapperW / magnifierOptions.w));\n                magnifierOptions.largeT = Math.round(magnifierOptions.lensBgY * magnifierOptions.zoom * (magnifierOptions.largeWrapperH / magnifierOptions.h));\n            }\n        }\n\n        function onThumbEnter() {\n            if (_toBoolean(enabled)) {\n                magnifierOptions = data[curIdx];\n                curLens = $box.find('.magnify-lens');\n\n                if (magnifierOptions.status === 2) {\n                    curLens.removeClass(MagnifyCls.magnifyOpaque);\n                    curLarge = $('#' + curIdx + '-large');\n                    curLarge.removeClass(MagnifyCls.magnifyHidden);\n                } else if (magnifierOptions.status === 1) {\n                    curLens.className = 'magnifier-loader';\n                }\n            }\n        }\n\n        function onThumbLeave() {\n            if (magnifierOptions.status > 0) {\n                var handler = magnifierOptions.onthumbleave;\n\n                if (handler !== null) {\n                    handler({\n                        thumb: curThumb,\n                        lens: curLens,\n                        large: curLarge,\n                        x: pos.x,\n                        y: pos.y\n                    });\n                }\n\n                if (!curLens.hasClass(MagnifyCls.magnifyHidden)) {\n                    curLens.addClass(MagnifyCls.magnifyHidden);\n\n                    //$curThumb.removeClass(MagnifyCls.magnifyOpaque);\n                    if (curLarge !== null) {\n                        curLarge.addClass(MagnifyCls.magnifyHidden);\n                    }\n                }\n            }\n        }\n\n        function move() {\n            if (_toBoolean(enabled)) {\n                if (status !== magnifierOptions.status) {\n                    onThumbEnter();\n                }\n\n                if (magnifierOptions.status > 0) {\n                    curThumb.className = magnifierOptions.thumbCssClass + ' magnify-opaque';\n\n                    if (magnifierOptions.status === 1) {\n                        curLens.className = 'magnifier-loader';\n                    } else if (magnifierOptions.status === 2) {\n                        curLens.removeClass(MagnifyCls.magnifyHidden);\n                        curLarge.removeClass(MagnifyCls.magnifyHidden);\n                        curLarge.css({\n                            left: '-' + magnifierOptions.largeL + 'px',\n                            top: '-' + magnifierOptions.largeT + 'px'\n                        });\n                    }\n\n                    var borderOffset = 2; // Offset for magnify-lens border\n                    pos.t = pos.t <= 0 ? 0 : pos.t - borderOffset;\n\n                    curLens.css({\n                        left: pos.l + paddingX + 'px',\n                        top: pos.t + paddingY + 'px'\n                    });\n\n                    if (lensbg) {\n                        curLens.css({\n                            'background-color': 'rgba(f,f,f,.5)'\n                        });\n                    } else {\n                        curLens.get(0).style.backgroundPosition = '-' +\n                        magnifierOptions.lensBgX + 'px -' +\n                        magnifierOptions.lensBgY + 'px';\n                    }\n                    var handler = magnifierOptions.onthumbmove;\n\n                    if (handler !== null) {\n                        handler({\n                            thumb: curThumb,\n                            lens: curLens,\n                            large: curLarge,\n                            x: pos.x,\n                            y: pos.y\n                        });\n                    }\n                }\n\n                status = magnifierOptions.status;\n            }\n        }\n\n        function setThumbData(mainImage, mainImageData) {\n            var thumbBounds = mainImage.getBoundingClientRect(),\n                w = 0,\n                h = 0;\n\n            mainImageData.x = Math.round(thumbBounds.left);\n            mainImageData.y = Math.round(thumbBounds.top);\n            mainImageData.w = Math.round(thumbBounds.right - mainImageData.x);\n            mainImageData.h = Math.round(thumbBounds.bottom - mainImageData.y);\n\n            if (mainImageData.mode === 'inside') {\n                w = mainImageData.w;\n                h = mainImageData.h;\n            } else {\n                w = mainImageData.largeWrapperW;\n                h = mainImageData.largeWrapperH;\n            }\n\n            mainImageData.largeImgInMagnifyLensWidth = Math.round(mainImageData.zoom * w);\n            mainImageData.largeImgInMagnifyLensHeight = Math.round(mainImageData.zoom * h);\n\n            mainImageData.lensW = Math.round(mainImageData.w / mainImageData.zoom);\n            mainImageData.lensH = Math.round(mainImageData.h / mainImageData.zoom);\n        }\n\n        function _init($box, options) {\n            var opts = {};\n\n            if (options.thumb === undefined) {\n                return false;\n            }\n\n            $thumb = $box.find(options.thumb);\n\n            if ($thumb.length) {\n                for (var key in options) {\n                    opts[key] = options[key];\n                }\n\n                opts.thumb = $thumb;\n                enabled = opts.enabled;\n\n                if (_toBoolean(enabled)) {\n\n                    $magnifierPreview.show().css('display', '');\n                    $magnifierPreview.addClass(MagnifyCls.magnifyHidden);\n                    set(opts);\n                } else {\n                    $magnifierPreview.empty().hide();\n                }\n            }\n\n            return that;\n        }\n\n        function hoverEvents(thumb) {\n            $(thumb).on('mouseover', function (e) {\n\n                if (showWrapper) {\n\n                    if (magnifierOptions.status !== 0) {\n                        onThumbLeave();\n                    }\n                    handleEvents(e);\n                    isOverThumb = inBounds;\n                }\n            }).trigger('mouseover');\n        }\n\n        function clickEvents(thumb) {\n            $(thumb).on('click', function (e) {\n\n                if (showWrapper) {\n                    if (!isOverThumb) {\n                        if (magnifierOptions.status !== 0) {\n                            onThumbLeave();\n                        }\n                        handleEvents(e);\n                        isOverThumb = true;\n                    }\n                }\n            });\n        }\n\n        function bindEvents(eType, thumb) {\n            switch (eType) {\n                case 'hover':\n                    hoverEvents(thumb);\n                    break;\n\n                case 'click':\n                    clickEvents(thumb);\n                    break;\n            }\n        }\n\n        function handleEvents(e) {\n            var src = e.target;\n\n            curIdx = src.id;\n            curThumb = src;\n\n            onThumbEnter(src);\n\n            setThumbData(curThumb, magnifierOptions);\n\n            pos.x = e.clientX;\n            pos.y = e.clientY;\n\n            getMousePos();\n            move();\n\n            var handler = magnifierOptions.onthumbenter;\n\n            if (handler !== null) {\n                handler({\n                    thumb: curThumb,\n                    lens: curLens,\n                    large: curLarge,\n                    x: pos.x,\n                    y: pos.y\n                });\n            }\n        }\n\n        function set(options) {\n            if (data[options.thumb.id] !== undefined) {\n                curThumb = options.thumb;\n\n                return false;\n            }\n\n            var thumbObj = new Image(),\n                largeObj = new Image(),\n                $thumb = options.thumb,\n                thumb = $thumb.get(0),\n                idx = thumb.id,\n                largeUrl,\n                largeWrapper = $(options.largeWrapper),\n                zoom = options.zoom || thumb.getAttribute('data-zoom') || gZoom,\n                zoomMin = options.zoomMin || gZoomMin,\n                zoomMax = options.zoomMax || gZoomMax,\n                mode = options.mode || thumb.getAttribute('data-mode') || gMode,\n                eventType = options.eventType || thumb.getAttribute('data-eventType') || gEventType,\n                onthumbenter = options.onthumbenter !== undefined ?\n                    options.onthumbenter\n                    : magnifierOptions.onthumbenter,\n                onthumbleave = options.onthumbleave !== undefined ?\n                    options.onthumbleave\n                    : magnifierOptions.onthumbleave,\n                onthumbmove = options.onthumbmove !== undefined ?\n                    options.onthumbmove\n                    : magnifierOptions.onthumbmove;\n\n            largeUrl = $thumb.data('original') || customUserOptions.full || $thumb.attr('src');\n\n            if (thumb.id === '') {\n                idx = thumb.id = 'magnifier-item-' + gId;\n                gId += 1;\n            }\n\n            createLens(thumb, idx);\n\n            if (options.width) {\n                largeWrapper.width(options.width);\n            }\n\n            if (options.height) {\n                largeWrapper.height(options.height);\n            }\n\n            if (options.top) {\n                if (typeof options.top == 'function') {\n                    var top = options.top() + 'px';\n                } else {\n                    var top = options.top + 'px';\n                }\n\n                if (largeWrapper.length) {\n                    largeWrapper[0].style.top = top.replace('%px', '%');\n                }\n            }\n\n            if (options.left) {\n                if (typeof options.left == 'function') {\n                    var left = options.left() + 'px';\n                } else {\n                    var left = options.left + 'px';\n                }\n\n                if (largeWrapper.length) {\n                    largeWrapper[0].style.left = left.replace('%px', '%');\n                }\n            }\n\n            data[idx] = {\n                zoom: zoom,\n                zoomMin: zoomMin,\n                zoomMax: zoomMax,\n                mode: mode,\n                eventType: eventType,\n                thumbCssClass: thumb.className,\n                zoomAttached: false,\n                status: 0,\n                largeUrl: largeUrl,\n                largeWrapperId: mode === 'outside' ? largeWrapper.attr('id') : null,\n                largeWrapperW: mode === 'outside' ? largeWrapper.width() : null,\n                largeWrapperH: mode === 'outside' ? largeWrapper.height() : null,\n                onthumbenter: onthumbenter,\n                onthumbleave: onthumbleave,\n                onthumbmove: onthumbmove\n            };\n\n            paddingX = ($thumb.parent().width() - $thumb.width()) / 2;\n            paddingY = ($thumb.parent().height() - $thumb.height()) / 2;\n\n            showWrapper = false;\n            $(thumbObj).on('load', function () {\n                data[idx].status = 1;\n\n                $(largeObj).on('load', function () {\n\n                    if (largeObj.width > largeWrapper.width() || largeObj.height > largeWrapper.height()) {\n                        showWrapper = true;\n                        bindEvents(eventType, thumb);\n                        data[idx].status = 2;\n                        if (largeObj.width > largeObj.height) {\n                            data[idx].zoom = largeObj.width / largeWrapper.width();\n                        } else {\n                            data[idx].zoom = largeObj.height / largeWrapper.height();\n                        }\n                        setThumbData(thumb, data[idx]);\n                        updateLensOnLoad(idx, thumb, largeObj, largeWrapper);\n                    }\n                });\n\n                largeObj.src = data[idx].largeUrl;\n            });\n\n            thumbObj.src = thumb.src;\n        }\n\n        /**\n         * Hide magnifier when mouse exceeds image bounds.\n         */\n        function onMouseLeave() {\n            onThumbLeave();\n            isOverThumb = false;\n            $magnifierPreview.addClass(MagnifyCls.magnifyHidden);\n        }\n\n        function onMousemove(e) {\n            pos.x = e.clientX;\n            pos.y = e.clientY;\n\n            getMousePos();\n\n            if (gEventType === 'hover') {\n                isOverThumb = inBounds;\n            }\n\n            if (inBounds && isOverThumb && gMode === 'outside') {\n                $magnifierPreview.removeClass(MagnifyCls.magnifyHidden);\n                move();\n            }\n        }\n\n        function onScroll() {\n            if (curThumb !== null) {\n                setThumbData(curThumb, magnifierOptions);\n            }\n        }\n\n        $(window).on('scroll', onScroll);\n        $(window).resize(function () {\n            _init($box, customUserOptions);\n        });\n\n        $box.on('mousemove', onMousemove);\n        $box.on('mouseleave', onMouseLeave);\n\n        _init($box, customUserOptions);\n    }\n}(jQuery));\n","magnifier/magnify.js":"/**\n * Copyright \u00a9 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'underscore',\n    'magnifier/magnifier'\n], function ($, _) {\n    'use strict';\n\n    return function (config, element) {\n\n        var isTouchEnabled = 'ontouchstart' in document.documentElement,\n            gallerySelector = '[data-gallery-role=\"gallery\"]',\n            magnifierSelector = '[data-gallery-role=\"magnifier\"]',\n            magnifierZoomSelector = '[data-gallery-role=\"magnifier-zoom\"]',\n            zoomInButtonSelector = '[data-gallery-role=\"fotorama__zoom-in\"]',\n            zoomOutButtonSelector = '[data-gallery-role=\"fotorama__zoom-out\"]',\n            fullscreenImageSelector = '[data-gallery-role=\"stage-shaft\"] [data-active=\"true\"] .fotorama__img--full',\n            imageDraggableClass = 'fotorama__img--draggable',\n            imageZoommable = 'fotorama__img--zoommable',\n            zoomInLoaded = 'zoom-in-loaded',\n            zoomOutLoaded = 'zoom-out-loaded',\n            zoomInDisabled = 'fotorama__zoom-in--disabled',\n            zoomOutDisabled = 'fotorama__zoom-out--disabled',\n            keyboardNavigation,\n            videoContainerClass = 'fotorama-video-container',\n            hideMagnifier,\n            dragFlag,\n            endX,\n            transitionEnabled,\n            transitionActive = false,\n            tapFlag = 0,\n            allowZoomOut = false,\n            allowZoomIn = true;\n\n        (function () {\n            var style = document.documentElement.style,\n                transitionEnabled = style.transition !== undefined ||\n                style.WebkitTransition !== undefined ||\n                style.MozTransition !== undefined ||\n                style.MsTransition !== undefined ||\n                style.OTransition !== undefined;\n        })();\n\n        /**\n         * Return width and height of original image\n         * @param img original image node\n         * @returns {{rw: number, rh: number}}\n         */\n        function getImageSize(img) {\n            return {\n                rw: img.naturalWidth,\n                rh: img.naturalHeight\n            };\n        }\n\n        /**\n         * Sets min-height and min-width for image to avoid transition bug\n         * @param $image - fullscreen image\n         */\n        function calculateMinSize($image) {\n\n            var minHeight,\n                minWidth,\n                height = $image.height(),\n                width = $image.width(),\n                parentHeight = $image.parent().height(),\n                parentWidth = $image.parent().width();\n\n            if (width > parentWidth || height > parentHeight) {\n\n                if (width / height < parentWidth / parentHeight) {\n                    minHeight = parentHeight;\n                    minWidth = width * (parentHeight / height);\n                } else {\n                    minWidth = parentWidth;\n                    minHeight = height * parentWidth / width;\n                }\n                $image.css({\n                    'min-width': minWidth,\n                    'min-height': minHeight\n                });\n            }\n        }\n\n        function toggleZoomable($image, flag) {\n            if (flag) {\n                $image.css({\n                    'min-width': $image.width(),\n                    'min-height': $image.height(),\n                    'width': $image.width(),\n                    'height': $image.height()\n                }).addClass(imageZoommable);\n            } else {\n                $image.css({\n                    width: '',\n                    height: '',\n                    top: '',\n                    left: '',\n                    right: '',\n                    bottom: ''\n                }).removeClass(imageZoommable);\n                calculateMinSize($image);\n            }\n        }\n\n        function resetVars($image) {\n            allowZoomIn = true;\n            allowZoomOut = dragFlag = transitionActive = false;\n            $image.hasClass(imageDraggableClass) && $image.removeClass(imageDraggableClass);\n            toggleZoomable($image, false);\n        }\n\n        /**\n         * Set state for zoom controls.\n         * If state is true, zoom controls will be visible.\n         * IF state is false, zoom controls will be hidden.\n         * @param isHide\n         */\n        function hideZoomControls(isHide) {\n            if (isHide) {\n                $(zoomInButtonSelector).addClass(zoomInDisabled);\n                $(zoomOutButtonSelector).addClass(zoomOutDisabled);\n            } else {\n                $(zoomInButtonSelector).removeClass(zoomInDisabled);\n                $(zoomOutButtonSelector).removeClass(zoomOutDisabled);\n            }\n        }\n\n        /**\n         * Asynchronus control visibility of zoom buttons.\n         * If image bigger than her wrapper. Zoom controls must visible.\n         * @param path - image source path\n         * @param $image\n         */\n        function asyncToggleZoomButtons(path, $image) {\n            var img = new Image();\n\n            img.onload = function () {\n                this.height > $image.parent().height() || this.width > $image.parent().width() ?\n                    hideZoomControls(false) : hideZoomControls(true);\n            };\n            img.src = path;\n        }\n\n        /**\n         * Control visibility of zoom buttons.\n         * Zoom controls must be invisible for video content and touch devices.\n         * On touch devices active pinchIn/pinchOut.\n         * @param $image\n         * @param isTouchScreen - true for touch devices\n         * @param isVideoActiveFrame - true for active video frame\n         */\n        function toggleZoomButtons($image, isTouchScreen, isVideoActiveFrame) {\n            var path = $image.attr('src');\n\n            if (path && !isTouchScreen && !isVideoActiveFrame) {\n                asyncToggleZoomButtons(path, $image);\n            } else {\n                hideZoomControls(true);\n            }\n        }\n\n        /**\n         * Handle resize event in fullscreen.\n         * @param $image - Fullscreen image.\n         * @param e - Event.\n         */\n        function resizeHandler(e, $image) {\n            var imageSize,\n                parentWidth,\n                parentHeight,\n                isImageSmall,\n                isImageFit;\n\n            if (!e.data.$image || !e.data.$image.length)\n                return;\n\n            imageSize = getImageSize($(fullscreenImageSelector)[0]);\n            parentWidth = e.data.$image.parent().width();\n            parentHeight = e.data.$image.parent().height();\n            isImageSmall = parentWidth >= imageSize.rw && parentHeight >= imageSize.rh;\n            isImageFit = parentWidth > e.data.$image.width() && parentHeight > e.data.$image.height();\n\n            toggleZoomButtons(e.data.$image, isTouchEnabled, checkForVideo(e.data.fotorama.activeFrame.$stageFrame));\n            calculateMinSize(e.data.$image);\n\n            if (e.data.$image.hasClass(imageZoommable) && !allowZoomOut || isImageSmall || isImageFit) {\n                resetVars(e.data.$image);\n            }\n\n            if (!isImageSmall) {\n                toggleStandartNavigation();\n            }\n        }\n\n        function getTopValue($image, topProp, step, height, containerHeight) {\n            var top;\n\n            if (parseInt($image.css('marginTop')) || parseInt($image.css('marginLeft'))) {\n                top = dragFlag ? topProp - step / 4 : 0;\n                top = top < containerHeight - height ? containerHeight - height : top;\n                top = top > height - containerHeight ? height - containerHeight : top;\n            } else {\n                top = topProp + step / 2;\n                top = top < containerHeight - height ? containerHeight - height : top;\n                top = top > 0 ? 0 : top;\n\n                if (!dragFlag && step < 0) {\n                    top = top < (containerHeight - height) / 2 ? (containerHeight - height) / 2 : top;\n                }\n            }\n\n            return top;\n        }\n\n        function getLeftValue(leftProp, step, width, containerWidth) {\n            var left;\n\n            left = leftProp + step / 2;\n            left = left < containerWidth - width ? containerWidth - width : left;\n            left = left > 0 ? 0 : left;\n\n            if (!dragFlag && step < 0) {\n                left = left < (containerWidth - width) / 2 ? (containerWidth - width) / 2 : left;\n            }\n\n            return left;\n        }\n\n        function checkFullscreenImagePosition($image, dimentions, widthStep, heightStep) {\n            var $imageContainer,\n                containerWidth,\n                containerHeight,\n                settings,\n                top,\n                left,\n                right,\n                bottom,\n                ratio;\n\n            if ($(gallerySelector).data('fotorama').fullScreen) {\n                transitionActive = true;\n                $imageContainer = $image.parent();\n                containerWidth = $imageContainer.width();\n                containerHeight = $imageContainer.height();\n                top = $image.position().top;\n                left = $image.position().left;\n                ratio = $image.width() / $image.height();\n                dimentions.height = isNaN(dimentions.height) ? dimentions.width / ratio : dimentions.height;\n                dimentions.width = isNaN(dimentions.width) ? dimentions.height * ratio : dimentions.width;\n\n                top = dimentions.height >= containerHeight ?\n                    getTopValue($image, top, heightStep, dimentions.height, containerHeight) : 0;\n\n                left = dimentions.width >= containerWidth ?\n                    getLeftValue(left, widthStep, dimentions.width, containerWidth) : 0;\n\n                right = dragFlag && left < (containerWidth - dimentions.width) / 2 ? 0 : left;\n                bottom = dragFlag ? 0 : top;\n\n                settings = $.extend(dimentions, {\n                    top: top,\n                    left: left,\n                    right: right\n                });\n\n                $image.css(settings);\n            }\n        }\n\n        /**\n         * Toggles fotorama's keyboard and mouse/touch navigation.\n         */\n        function toggleStandartNavigation() {\n            var $selectable =\n                    $('a[href], area[href], input, select, textarea, button, iframe, object, embed, *[tabindex], *[contenteditable]')\n                    .not('[tabindex=-1], [disabled], :hidden'),\n                fotorama = $(gallerySelector).data('fotorama'),\n                $focus = $(':focus'),\n                index;\n\n            if (fotorama.fullScreen) {\n\n                $selectable.each(function (number) {\n\n                    if ($(this).is($focus)) {\n                        index = number;\n                    }\n                });\n\n                fotorama.setOptions({\n                    swipe: !allowZoomOut,\n                    keyboard: !allowZoomOut\n                });\n\n                if (_.isNumber(index)) {\n                    $selectable.eq(index).focus();\n                }\n            }\n        }\n\n        function zoomIn(e, xStep, yStep) {\n            var $image,\n                imgOriginalSize,\n                imageWidth,\n                imageHeight,\n                zoomWidthStep,\n                zoomHeightStep,\n                widthResult,\n                heightResult,\n                ratio,\n                dimentions = {};\n\n            if (allowZoomIn && (!transitionEnabled || !transitionActive) && (isTouchEnabled ||\n                !$(zoomInButtonSelector).hasClass(zoomInDisabled))) {\n                $image = $(fullscreenImageSelector);\n                imgOriginalSize = getImageSize($image[0]);\n                imageWidth = $image.width();\n                imageHeight = $image.height();\n                ratio = imageWidth / imageHeight;\n                allowZoomOut = true;\n                toggleStandartNavigation();\n\n                if (!$image.hasClass(imageZoommable)) {\n                    toggleZoomable($image, true);\n                }\n\n                e.preventDefault();\n\n                if (imageWidth >= imageHeight) {\n                    zoomWidthStep = xStep || Math.ceil(imageWidth * parseFloat(config.magnifierOpts.fullscreenzoom) / 100);\n                    widthResult = imageWidth + zoomWidthStep;\n\n                    if (widthResult >= imgOriginalSize.rw) {\n                        widthResult = imgOriginalSize.rw;\n                        zoomWidthStep = xStep || widthResult - imageWidth;\n                        allowZoomIn = false;\n                    }\n                    heightResult = widthResult / ratio;\n                    zoomHeightStep = yStep || heightResult - imageHeight;\n                } else {\n                    zoomHeightStep = yStep || Math.ceil(imageHeight * parseFloat(config.magnifierOpts.fullscreenzoom) / 100);\n                    heightResult = imageHeight + zoomHeightStep;\n\n                    if (heightResult >= imgOriginalSize.rh) {\n                        heightResult = imgOriginalSize.rh;\n                        zoomHeightStep = yStep || heightResult - imageHeight;\n                        allowZoomIn = false;\n                    }\n                    widthResult = heightResult * ratio;\n                    zoomWidthStep = xStep || widthResult - imageWidth;\n                }\n\n                if (imageWidth >= imageHeight && imageWidth !== imgOriginalSize.rw) {\n                    dimentions = $.extend(dimentions, {\n                        width: widthResult,\n                        height: 'auto'\n                    });\n                    checkFullscreenImagePosition($image, dimentions, -zoomWidthStep, -zoomHeightStep);\n\n                } else if (imageWidth < imageHeight && imageHeight !== imgOriginalSize.rh) {\n                    dimentions = $.extend(dimentions, {\n                        width: 'auto',\n                        height: heightResult\n                    });\n                    checkFullscreenImagePosition($image, dimentions, -zoomWidthStep, -zoomHeightStep);\n                }\n            }\n\n            return false;\n        }\n\n        function zoomOut(e, xStep, yStep) {\n            var $image,\n                widthResult,\n                heightResult,\n                dimentions,\n                parentWidth,\n                parentHeight,\n                imageWidth,\n                imageHeight,\n                zoomWidthStep,\n                zoomHeightStep,\n                ratio,\n                fitIntoParent;\n\n            if (allowZoomOut && (!transitionEnabled || !transitionActive) && (isTouchEnabled ||\n                !$(zoomOutButtonSelector).hasClass(zoomOutDisabled))) {\n                allowZoomIn = true;\n                $image = $(fullscreenImageSelector);\n                parentWidth = $image.parent().width();\n                parentHeight = $image.parent().height();\n                imageWidth = $image.width();\n                imageHeight = $image.height();\n                ratio = imageWidth / imageHeight;\n\n                e.preventDefault();\n\n                if (imageWidth >= imageHeight) {\n                    zoomWidthStep = xStep || Math.ceil(imageWidth * parseFloat(config.magnifierOpts.fullscreenzoom) / 100);\n                    widthResult = imageWidth - zoomWidthStep;\n                    heightResult = widthResult / ratio;\n                    zoomHeightStep = yStep || imageHeight - heightResult;\n                } else {\n                    zoomHeightStep = yStep || Math.ceil(imageHeight * parseFloat(config.magnifierOpts.fullscreenzoom) / 100);\n                    heightResult = imageHeight - zoomHeightStep;\n                    widthResult = heightResult * ratio;\n                    zoomWidthStep = xStep || imageWidth - widthResult;\n                }\n\n                fitIntoParent = function () {\n                    if (ratio > parentWidth / parentHeight) {\n                        widthResult = parentWidth;\n                        zoomWidthStep = imageWidth - widthResult;\n                        heightResult = widthResult / ratio;\n                        zoomHeightStep = imageHeight - heightResult;\n                        dimentions = {\n                            width: widthResult,\n                            height: 'auto'\n                        };\n                    } else {\n                        heightResult = parentHeight;\n                        zoomHeightStep = imageHeight - heightResult;\n                        widthResult = heightResult * ratio;\n                        zoomWidthStep = imageWidth - widthResult;\n                        dimentions = {\n                            width: 'auto',\n                            height: heightResult\n                        };\n                    }\n                    checkFullscreenImagePosition($image, dimentions, zoomWidthStep, zoomHeightStep);\n                };\n\n                if (imageWidth >= imageHeight) {\n                    if (widthResult > parentWidth) {\n                        dimentions = {\n                            width: widthResult,\n                            height: 'auto'\n                        };\n                        checkFullscreenImagePosition($image, dimentions, zoomWidthStep, zoomHeightStep);\n                    } else if (heightResult > parentHeight) {\n                        dimentions = {\n                            width: widthResult,\n                            height: 'auto'\n                        };\n                        checkFullscreenImagePosition($image, dimentions, zoomWidthStep, zoomHeightStep);\n                    } else {\n                        allowZoomOut = dragFlag = false;\n                        toggleStandartNavigation();\n                        fitIntoParent();\n                    }\n                } else if (heightResult > parentHeight) {\n                    dimentions = {\n                        width: 'auto',\n                        height: heightResult\n                    };\n                    checkFullscreenImagePosition($image, dimentions, zoomWidthStep, zoomHeightStep);\n                } else if (widthResult > parentWidth) {\n                    dimentions = {\n                        width: 'auto',\n                        height: heightResult\n                    };\n                    checkFullscreenImagePosition($image, dimentions, zoomWidthStep, zoomHeightStep);\n                } else {\n                    allowZoomOut = dragFlag = false;\n                    toggleStandartNavigation();\n                    fitIntoParent();\n                }\n            }\n\n            return false;\n        }\n\n        /**\n         * Bind event on scroll on active item in fotorama\n         * @param e\n         * @param fotorama - object of fotorama\n         */\n        function mousewheel(e, fotorama, element) {\n            var $fotoramaStage = fotorama.activeFrame.$stageFrame,\n                fotoramaStage = $fotoramaStage.get(0);\n\n            function onWheel(e) {\n                var delta = e.deltaY || e.wheelDelta,\n                    ev = e || window.event;\n\n                if ($(gallerySelector).data('fotorama').fullScreen) {\n\n                    if (e.deltaY) {\n                        if (delta > 0) {\n                            zoomOut(ev);\n                        } else {\n                            zoomIn(ev);\n                        }\n                    } else if (delta > 0) {\n                        zoomIn(ev);\n                    } else {\n                        zoomOut(ev);\n                    }\n\n                    e.preventDefault ? e.preventDefault() : e.returnValue = false;\n                }\n            }\n\n            if (!$fotoramaStage.hasClass('magnify-wheel-loaded')) {\n                if (fotoramaStage && fotoramaStage.addEventListener) {\n                    if ('onwheel' in document) {\n                        fotoramaStage.addEventListener('wheel', onWheel);\n                    } else if ('onmousewheel' in document) {\n                        fotoramaStage.addEventListener('mousewheel', onWheel);\n                    } else {\n                        fotoramaStage.addEventListener('MozMousePixelScroll', onWheel);\n                    }\n                    $fotoramaStage.addClass('magnify-wheel-loaded');\n                }\n            }\n        }\n\n        /**\n         * Method which makes draggable picture. Also work on touch devices.\n         */\n        function magnifierFullscreen(fotorama) {\n            var isDragActive = false,\n                startX,\n                startY,\n                imagePosX,\n                imagePosY,\n                touch,\n                swipeSlide,\n                $gallery = $(gallerySelector),\n                $image = $(fullscreenImageSelector, $gallery),\n                $imageContainer = $('[data-gallery-role=\"stage-shaft\"] [data-active=\"true\"]'),\n                gallery = $gallery.data('fotorama'),\n                pinchDimention;\n\n            swipeSlide = _.throttle(function (direction) {\n                $(gallerySelector).data('fotorama').show(direction);\n            }, 500, {\n                trailing: false\n            });\n\n            /**\n             * Returns top position value for passed jQuery object.\n             *\n             * @param $el\n             * @return {number}\n             */\n            function getTop($el) {\n                return parseInt($el.get(0).style.top);\n            }\n\n            function shiftImage(dx, dy, e) {\n                var top = +imagePosY + dy,\n                    left = +imagePosX + dx,\n                    swipeCondition = $image.width() / 10 + 20;\n\n                dragFlag = true;\n\n                if ($image.offset().left === $imageContainer.offset().left + $imageContainer.width() - $image.width() && e.keyCode === 39 ||\n                    endX - 1 < $imageContainer.offset().left + $imageContainer.width() - $image.width() && dx < 0 &&\n                    _.isNumber(endX) &&\n                    (e.type === 'mousemove' || e.type === 'touchmove' || e.type === 'pointermove' || e.type === 'MSPointerMove')) {\n                    endX = null;\n                    swipeSlide('>');\n\n                    return;\n                }\n\n                if ($image.offset().left === $imageContainer.offset().left && dx !== 0 && e.keyCode === 37 ||\n                    endX === $imageContainer.offset().left && dx > 0 &&\n                    (e.type === 'mousemove' || e.type === 'touchmove' || e.type === 'pointermove' || e.type === 'MSPointerMove')) {\n                    endX = null;\n                    swipeSlide('<');\n\n                    return;\n                }\n\n                if ($image.height() > $imageContainer.height()) {\n                    if ($imageContainer.height() > $image.height() + top) {\n                        $image.css('top', $imageContainer.height() - $image.height());\n                    } else {\n                        top = $image.height() - getTop($image) - $imageContainer.height();\n                        dy = dy < top ? dy : top;\n                        $image.css('top', getTop($image) + dy);\n                    }\n                }\n\n                if ($image.width() > $imageContainer.width()) {\n\n                    if ($imageContainer.offset().left + $imageContainer.width() > left + $image.width()) {\n                        left = $imageContainer.offset().left + $imageContainer.width() - $image.width();\n                    } else {\n                        left = $imageContainer.offset().left < left ? $imageContainer.offset().left : left;\n                    }\n                    $image.offset({\n                        'left': left\n                    });\n                    $image.css('right', '');\n                } else if (Math.abs(dy) < 1 && allowZoomOut &&\n                    !(e.type === 'mousemove' || e.type === 'touchmove' || e.type === 'pointermove' || e.type === 'MSPointerMove')) {\n                    dx < 0 ? $(gallerySelector).data('fotorama').show('>') : $(gallerySelector).data('fotorama').show('<');\n                }\n\n                if ($image.width() <= $imageContainer.width() && allowZoomOut &&\n                    (e.type === 'mousemove' || e.type === 'touchmove' || e.type === 'pointermove' || e.type === 'MSPointerMove') &&\n                    Math.abs(dx) > Math.abs(dy) && Math.abs(dx) > swipeCondition) {\n                    dx < 0 ? swipeSlide('>') : swipeSlide('<');\n                }\n            }\n\n            /**\n             * Sets image size to original or fit in parent block\n             * @param e - event object\n             */\n            function dblClickHandler(e) {\n                var imgOriginalSize = getImageSize($image[0]),\n                    proportions;\n\n                if (imgOriginalSize.rh < $image.parent().height() && imgOriginalSize.rw < $image.parent().width()) {\n                    return;\n                }\n\n                proportions = imgOriginalSize.rw / imgOriginalSize.rh;\n\n                if (allowZoomIn) {\n                    zoomIn(e, imgOriginalSize.rw - $image.width(), imgOriginalSize.rh - $image.height());\n                } else if (proportions > $imageContainer.width() / $imageContainer.height()) {\n                    zoomOut(e, imgOriginalSize.rw - $imageContainer.width(), imgOriginalSize.rw / proportions);\n                } else {\n                    zoomOut(e, imgOriginalSize.rw * proportions, imgOriginalSize.rh - $imageContainer.height());\n                }\n            }\n\n            function detectDoubleTap(e) {\n                var now = new Date().getTime(),\n                    timesince = now - tapFlag;\n\n                if (timesince < 400 && timesince > 0) {\n                    transitionActive = false;\n                    tapFlag = 0;\n                    dblClickHandler(e);\n                } else {\n                    tapFlag = new Date().getTime();\n                }\n            }\n\n            if (isTouchEnabled) {\n                $image.off('tap');\n                $image.on('tap', function (e) {\n                    if (e.originalEvent.originalEvent.touches.length === 0) {\n                        detectDoubleTap(e);\n                    }\n                });\n            } else {\n                $image.unbind('dblclick');\n                $image.dblclick(dblClickHandler);\n            }\n\n            if (gallery.fullScreen) {\n                toggleZoomButtons($image, isTouchEnabled, checkForVideo(fotorama.activeFrame.$stageFrame));\n            }\n\n            function getDimention(event) {\n                return Math.sqrt(\n                    (event.touches[0].clientX - event.touches[1].clientX) * (event.touches[0].clientX - event.touches[1].clientX) +\n                    (event.touches[0].clientY - event.touches[1].clientY) * (event.touches[0].clientY - event.touches[1].clientY));\n            }\n\n            $image.off(isTouchEnabled ? 'touchstart' : 'pointerdown mousedown MSPointerDown');\n            $image.on(isTouchEnabled ? 'touchstart' : 'pointerdown mousedown MSPointerDown', function (e) {\n                if (e && e.originalEvent.touches && e.originalEvent.touches.length >= 2) {\n                    e.preventDefault();\n                    pinchDimention = getDimention(e.originalEvent);\n                    isDragActive = false;\n\n                    if ($image.hasClass(imageDraggableClass)) {\n                        $image.removeClass(imageDraggableClass);\n                    }\n                } else if (gallery.fullScreen && (!transitionEnabled || !transitionActive)) {\n                    imagePosY = getTop($image);\n                    imagePosX = $image.offset().left;\n\n                    if (isTouchEnabled) {\n                        touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\n                        e.clientX = touch.pageX;\n                        e.clientY = touch.pageY;\n                    }\n                    startX = e.clientX || e.originalEvent.clientX;\n                    startY = e.clientY || e.originalEvent.clientY;\n                    isDragActive = true;\n                }\n\n                if ($image.offset() && $image.width() > $imageContainer.width()) {\n                    endX = $image.offset().left;\n                }\n            });\n\n            $image.off(isTouchEnabled ? 'touchmove' : 'mousemove pointermove MSPointerMove');\n            $image.on(isTouchEnabled ? 'touchmove' : 'mousemove pointermove MSPointerMove', function (e) {\n                if (e && e.originalEvent.touches && e.originalEvent.touches.length >= 2) {\n                    e.preventDefault();\n                    var currentDimention = getDimention(e.originalEvent);\n\n                    if ($image.hasClass(imageDraggableClass)) {\n                        $image.removeClass(imageDraggableClass);\n                    }\n\n                    if (currentDimention < pinchDimention) {\n                        zoomOut(e);\n                        pinchDimention = currentDimention;\n                    } else if (currentDimention > pinchDimention) {\n                        zoomIn(e);\n                        pinchDimention = currentDimention;\n                    }\n                } else {\n                    var clientX,\n                        clientY;\n\n                    if (gallery.fullScreen && isDragActive && (!transitionEnabled || !transitionActive)) {\n\n                        if (allowZoomOut && !$image.hasClass(imageDraggableClass)) {\n                            $image.addClass(imageDraggableClass);\n                        }\n                        clientX = e.clientX || e.originalEvent.clientX;\n                        clientY = e.clientY || e.originalEvent.clientY;\n\n                        e.preventDefault();\n\n                        if (isTouchEnabled) {\n                            touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0];\n                            clientX = touch.pageX;\n                            clientY = touch.pageY;\n                        }\n\n                        if (allowZoomOut) {\n                            imagePosY = getTop($(fullscreenImageSelector, $gallery));\n                            shiftImage(clientX - startX, clientY - startY, e);\n                        }\n                    }\n                }\n            });\n\n            $image.off('transitionend webkitTransitionEnd mozTransitionEnd msTransitionEnd ');\n            $image.on('transitionend webkitTransitionEnd mozTransitionEnd msTransitionEnd', function () {\n                transitionActive = false;\n            });\n\n            if (keyboardNavigation) {\n                $(document).unbind('keydown', keyboardNavigation);\n            }\n\n            /**\n             * Replaces original navigations with better one\n             * @param e - event object\n             */\n            keyboardNavigation = function (e) {\n                var step = 40,\n                    $focus = $(':focus'),\n                    isFullScreen = $(gallerySelector).data('fotorama').fullScreen,\n                    initVars = function () {\n                        imagePosX = $(fullscreenImageSelector, $gallery).offset().left;\n                        imagePosY = getTop($(fullscreenImageSelector, $gallery));\n                    };\n\n                if (($focus.attr('data-gallery-role') || !$focus.length) && allowZoomOut) {\n                    if (isFullScreen) {\n                        imagePosX = $(fullscreenImageSelector, $(gallerySelector)).offset().left;\n                        imagePosY = getTop($(fullscreenImageSelector, $(gallerySelector)));\n                    }\n\n                    if (e.keyCode === 39) {\n\n                        if (isFullScreen) {\n                            initVars();\n                            shiftImage(-step, 0, e);\n                        }\n                    }\n\n                    if (e.keyCode === 38) {\n\n                        if (isFullScreen) {\n                            initVars();\n                            shiftImage(0, step, e);\n                        }\n                    }\n\n                    if (e.keyCode === 37) {\n\n                        if (isFullScreen) {\n                            initVars();\n                            shiftImage(step, 0, e);\n                        }\n                    }\n\n                    if (e.keyCode === 40) {\n\n                        if (isFullScreen) {\n                            e.preventDefault();\n                            initVars();\n                            shiftImage(0, -step, e);\n                        }\n                    }\n                }\n\n                if (e.keyCode === 27 && isFullScreen && allowZoomOut) {\n                    $(gallerySelector).data('fotorama').cancelFullScreen();\n                }\n            };\n\n            /**\n             * @todo keyboard navigation through Fotorama Api.\n             */\n            $(document).keydown(keyboardNavigation);\n\n            $(document).on(isTouchEnabled ? 'touchend' : 'mouseup pointerup MSPointerUp', function (e) {\n                if (gallery.fullScreen) {\n\n                    if ($image.offset() && $image.width() > $imageContainer.width()) {\n                        endX = $image.offset().left;\n                    }\n\n                    isDragActive = false;\n                    $image.removeClass(imageDraggableClass);\n                }\n            });\n\n            $(window).off('resize', resizeHandler);\n            $(window).on('resize', {\n                $image: $image,\n                fotorama: fotorama\n            }, resizeHandler);\n        }\n\n        /**\n         * Hides magnifier preview and zoom blocks.\n         */\n        hideMagnifier = function () {\n            $(magnifierSelector).empty().hide();\n            $(magnifierZoomSelector).remove();\n        };\n\n        /**\n         * Check is active frame in gallery include video content.\n         * If true activeFrame contain video.\n         * @param $stageFrame - active frame in gallery\n         * @returns {*|Boolean}\n         */\n        function checkForVideo($stageFrame) {\n            return $stageFrame.hasClass(videoContainerClass);\n        }\n\n        /**\n         * Hides magnifier on drag and while arrow click.\n         */\n        function behaveOnDrag(e, initPos) {\n            var pos = [e.pageX, e.pageY],\n                isArrow = $(e.target).data('gallery-role') === 'arrow',\n                isClick = initPos[0] === pos[0] && initPos[1] === pos[1],\n                isImg = $(e.target).parent().data('active');\n\n            if (isArrow || isImg && !isClick) {\n                hideMagnifier();\n            }\n        }\n\n        if (config.magnifierOpts.enabled) {\n            $(element).on('pointerdown mousedown MSPointerDown', function (e) {\n                var pos = [e.pageX, e.pageY];\n\n                $(element).on('mousemove pointermove MSPointerMove', function (ev) {\n                    navigator.msPointerEnabled ? hideMagnifier() : behaveOnDrag(ev, pos);\n                });\n                $(document).on('mouseup pointerup MSPointerUp', function () {\n                    $(element).off('mousemove pointermove MSPointerMove');\n                });\n            });\n        }\n\n        $.extend(config.magnifierOpts, {\n            zoomable: false,\n            thumb: '.fotorama__img',\n            largeWrapper: '[data-gallery-role=\"magnifier\"]',\n            height: config.magnifierOpts.height || function () {\n                return $('[data-active=\"true\"]').height();\n            },\n            width: config.magnifierOpts.width || function () {\n                var productMedia = $(gallerySelector).parent().parent();\n\n                return productMedia.parent().width() - productMedia.width() - 20;\n            },\n            left: config.magnifierOpts.left || function () {\n                return $(gallerySelector).offset().left + $(gallerySelector).width() + 20;\n            },\n            top: config.magnifierOpts.top || function () {\n                return $(gallerySelector).offset().top;\n            }\n        });\n\n        $(element).on('fotorama:load fotorama:showend fotorama:fullscreenexit fotorama:ready', function (e, fotorama) {\n            var $activeStageFrame = $(gallerySelector).data('fotorama').activeFrame.$stageFrame;\n\n            if (!$activeStageFrame.find(magnifierZoomSelector).length) {\n                hideMagnifier();\n\n                if (config.magnifierOpts) {\n                    config.magnifierOpts.large = $(gallerySelector).data('fotorama').activeFrame.img;\n                    config.magnifierOpts.full = fotorama.data[fotorama.activeIndex].original;\n                    !checkForVideo($activeStageFrame) && $($activeStageFrame).magnify(config.magnifierOpts);\n                }\n            }\n        });\n\n        $(element).on('gallery:loaded', function (e) {\n            var $prevImage;\n\n            $(element).find(gallerySelector)\n                .on('fotorama:ready', function (e, fotorama) {\n                    var $zoomIn = $(zoomInButtonSelector),\n                        $zoomOut = $(zoomOutButtonSelector);\n\n                    if (!$zoomIn.hasClass(zoomInLoaded)) {\n                        $zoomIn.on('click touchstart', zoomIn);\n                        $zoomIn.on('mousedown', function (e) {\n                            e.stopPropagation();\n                        });\n\n                        $zoomIn.keyup(function (e) {\n\n                            if (e.keyCode === 13) {\n                                zoomIn(e);\n                            }\n                        });\n\n                        $(window).keyup(function (e) {\n\n                            if (e.keyCode === 107 || fotorama.fullscreen) {\n                                zoomIn(e);\n                            }\n                        });\n\n                        $zoomIn.addClass(zoomInLoaded);\n                    }\n\n                    if (!$zoomOut.hasClass(zoomOutLoaded)) {\n                        $zoomOut.on('click touchstart', zoomOut);\n                        $zoomOut.on('mousedown', function (e) {\n                            e.stopPropagation();\n                        });\n\n                        $zoomOut.keyup(function (e) {\n\n                            if (e.keyCode === 13) {\n                                zoomOut(e);\n                            }\n                        });\n\n                        $(window).keyup(function (e) {\n\n                            if (e.keyCode === 109 || fotorama.fullscreen) {\n                                zoomOut(e);\n                            }\n                        });\n\n                        $zoomOut.addClass(zoomOutLoaded);\n                    }\n                })\n                .on('fotorama:fullscreenenter fotorama:showend', function (e, fotorama) {\n                    hideMagnifier();\n\n                    if (!$(fullscreenImageSelector).is($prevImage)) {\n                        resetVars($(fullscreenImageSelector));\n                    }\n                    magnifierFullscreen(fotorama);\n                    mousewheel(e, fotorama, element);\n\n                    if ($prevImage) {\n                        calculateMinSize($prevImage);\n\n                        if (!$(fullscreenImageSelector).is($prevImage)) {\n                            resetVars($prevImage);\n                        }\n                    }\n\n                    toggleStandartNavigation();\n                })\n                .on('fotorama:load', function (e, fotorama) {\n                    if ($(gallerySelector).data('fotorama').fullScreen) {\n                        toggleZoomButtons($(fullscreenImageSelector), isTouchEnabled,\n                            checkForVideo(fotorama.activeFrame.$stageFrame));\n                    }\n                    magnifierFullscreen(fotorama);\n                })\n                .on('fotorama:show', function (e, fotorama) {\n                    $prevImage = _.clone($(fullscreenImageSelector));\n                    hideMagnifier();\n                })\n                .on('fotorama:fullscreenexit', function (e, fotorama) {\n                    resetVars($(fullscreenImageSelector));\n                    hideMagnifier();\n                    hideZoomControls(true);\n                });\n        });\n\n        return config;\n    };\n});\n","MSP_ReCaptcha/js/reCaptcha.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine(\n    [\n        'uiComponent',\n        'jquery',\n        'ko',\n        'MSP_ReCaptcha/js/registry'\n    ],\n    function (Component, $, ko, registry, undefined) {\n\n        return Component.extend({\n\n            defaults: {\n                template: 'MSP_ReCaptcha/reCaptcha',\n                reCaptchaId: 'msp-recaptcha'\n            },\n            _isApiRegistered: undefined,\n\n            initialize: function () {\n              this._super();\n              this._loadApi();\n            },\n\n            /**\n              * Loads recaptchaapi API and triggers event, when loaded\n              * @private\n              */\n            _loadApi: function () {\n                var element, scriptTag;\n\n                if (this._isApiRegistered !== undefined) {\n                    if (this._isApiRegistered === true) {\n                        $(window).trigger('recaptchaapiready');\n                    }\n\n                    return;\n                }\n                this._isApiRegistered = false;\n\n                // global function\n                window.globalOnRecaptchaOnLoadCallback = function() {\n                    this._isApiRegistered = true;\n                    $(window).trigger('recaptchaapiready');\n                }.bind(this);\n\n                element   = document.createElement('script');\n                scriptTag = document.getElementsByTagName('script')[0];\n\n                element.async = true;\n                element.src = 'https://www.google.com/recaptcha/api.js'\n                    + '?onload=globalOnRecaptchaOnLoadCallback&render=explicit'\n                    + (this.settings.lang ? '&hl=' + this.settings.lang : '');\n\n                scriptTag.parentNode.insertBefore(element, scriptTag);\n\n            },\n\n            /**\n             * Return true if reCaptcha is visible\n             * @returns {Boolean}\n             */\n            getIsVisible: function () {\n                return this.settings.enabled[this.zone];\n            },\n\n            /**\n             * Checking that reCaptcha is invisible type\n             * @returns {Boolean}\n             */\n            getIsInvisibleRecaptcha: function () {\n                return this.settings.size === 'invisible';\n            },\n\n            /**\n             * Recaptcha callback\n             * @param {String} token\n             */\n            reCaptchaCallback: function (token) {\n                if (this.settings.size === 'invisible') {\n                    this.tokenField.value = token;\n                    this.$parentForm.submit();\n                }\n            },\n\n            /**\n             * Initialize reCaptcha after first rendering\n             */\n            initCaptcha: function () {\n                var me = this,\n                    $parentForm,\n                    $wrapper,\n                    $reCaptcha,\n                    widgetId,\n                    listeners;\n\n                if (this.captchaInitialized) {\n                    return;\n                }\n\n                this.captchaInitialized = true;\n\n                /*\n                 * Workaround for data-bind issue:\n                 * We cannot use data-bind to link a dynamic id to our component\n                 * See: https://stackoverflow.com/questions/46657573/recaptcha-the-bind-parameter-must-be-an-element-or-id\n                 *\n                 * We create a wrapper element with a wrapping id and we inject the real ID with jQuery.\n                 * In this way we have no data-bind attribute at all in our reCaptcha div\n                 */\n                $wrapper = $('#' + this.getReCaptchaId() + '-wrapper');\n                $reCaptcha = $wrapper.find('.g-recaptcha');\n                $reCaptcha.attr('id', this.getReCaptchaId());\n\n                $parentForm = $wrapper.parents('form');\n                me = this;\n\n                // eslint-disable-next-line no-undef\n                widgetId = grecaptcha.render(this.getReCaptchaId(), {\n                    'sitekey': this.settings.siteKey,\n                    'theme': this.settings.theme,\n                    'size': this.settings.size,\n                    'badge': this.badge ? this.badge : this.settings.badge,\n                    'callback': function (token) { // jscs:ignore jsDoc\n                        me.reCaptchaCallback(token);\n                        me.validateReCaptcha(true);\n                    },\n                    'expired-callback': function () {\n                        me.validateReCaptcha(false);\n                    }\n                });\n\n                if (this.settings.size === 'invisible' && $parentForm.length > 0) {\n                    $parentForm.submit(function (event) {\n                        if (!me.tokenField.value) {\n                            // eslint-disable-next-line no-undef\n                            grecaptcha.execute(widgetId);\n                            event.preventDefault(event);\n                            event.stopImmediatePropagation();\n                        }\n                    });\n\n                    // Move our (last) handler topmost. We need this to avoid submit bindings with ko.\n                    listeners = $._data($parentForm[0], 'events').submit;\n                    listeners.unshift(listeners.pop());\n\n                    // Create a virtual token field\n                    this.tokenField = $('<input type=\"text\" name=\"token\" style=\"display: none\" />')[0];\n                    this.$parentForm = $parentForm;\n                    $parentForm.append(this.tokenField);\n                } else {\n                    this.tokenField = null;\n                }\n\n                registry.ids.push(this.getReCaptchaId());\n                registry.captchaList.push(widgetId);\n                registry.tokenFields.push(this.tokenField);\n\n            },\n\n\n            validateReCaptcha: function(state){\n                if (this.settings.size !== 'invisible') {\n                    return $(document).find('input[type=checkbox].required-captcha').prop( \"checked\", state );\n                }\n            },\n\n            /**\n             * Render reCaptcha\n             */\n            renderReCaptcha: function () {\n                var me = this;\n\n                if (this.getIsVisible()) {\n                    if (window.grecaptcha && window.grecaptcha.render) { // Check if recaptcha is already loaded\n                        me.initCaptcha();\n                    } else { // Wait for recaptcha to be loaded\n                        $(window).on('recaptchaapiready', function () {\n                            me.initCaptcha();\n                        });\n                    }\n                }\n            },\n\n            /**\n             * Get reCaptcha ID\n             * @returns {String}\n             */\n            getReCaptchaId: function () {\n                return this.reCaptchaId;\n            }\n        });\n    }\n);\n","MSP_ReCaptcha/js/registry.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine(['ko'], function (ko) {\nreturn {\n    ids: ko.observableArray([]),\n    captchaList: ko.observableArray([]),\n    tokenFields: ko.observableArray([])\n};\n});\n","MSP_ReCaptcha/js/ui-messages-mixin.js":"/**\n * MageSpecialist\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to info@magespecialist.it so we can send you a copy immediately.\n *\n * @copyright  Copyright (c) 2017 Skeeller srl (http://www.magespecialist.it)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n'use strict';\n\ndefine(['MSP_ReCaptcha/js/registry'], function (registry) {\n\nreturn function (originalComponent) {\n    return originalComponent.extend({\n        /**\n         * Initialize reset on messages\n         * @returns {initialize}\n         */\n        initialize: function () {\n            this._super();\n\n            this.messageContainer.errorMessages.subscribe(function () {\n                var\n                    i,\n                    captchaList = registry.captchaList(),\n                    tokenFieldsList = registry.tokenFields();\n\n                for (i = 0; i < captchaList.length; i++) {\n                    // eslint-disable-next-line no-undef\n                    grecaptcha.reset(captchaList[i]);\n\n                    if (tokenFieldsList[i]) {\n                        tokenFieldsList[i].value = '';\n                    }\n                }\n            }, null, 'arrayChange');\n\n            return this;\n        }\n    });\n};\n});\n","requirejs/domReady.js":"/**\n * @license RequireJS domReady 2.0.1 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/domReady for details\n */\n/*jslint */\n/*global require: false, define: false, requirejs: false,\n  window: false, clearInterval: false, document: false,\n  self: false, setInterval: false */\n\n\ndefine(function () {\n    'use strict';\n\n    var isTop, testDiv, scrollIntervalId,\n        isBrowser = typeof window !== \"undefined\" && window.document,\n        isPageLoaded = !isBrowser,\n        doc = isBrowser ? document : null,\n        readyCalls = [];\n\n    function runCallbacks(callbacks) {\n        var i;\n        for (i = 0; i < callbacks.length; i += 1) {\n            callbacks[i](doc);\n        }\n    }\n\n    function callReady() {\n        var callbacks = readyCalls;\n\n        if (isPageLoaded) {\n            //Call the DOM ready callbacks\n            if (callbacks.length) {\n                readyCalls = [];\n                runCallbacks(callbacks);\n            }\n        }\n    }\n\n    /**\n     * Sets the page as loaded.\n     */\n    function pageLoaded() {\n        if (!isPageLoaded) {\n            isPageLoaded = true;\n            if (scrollIntervalId) {\n                clearInterval(scrollIntervalId);\n            }\n\n            callReady();\n        }\n    }\n\n    if (isBrowser) {\n        if (document.addEventListener) {\n            //Standards. Hooray! Assumption here that if standards based,\n            //it knows about DOMContentLoaded.\n            document.addEventListener(\"DOMContentLoaded\", pageLoaded, false);\n            window.addEventListener(\"load\", pageLoaded, false);\n        } else if (window.attachEvent) {\n            window.attachEvent(\"onload\", pageLoaded);\n\n            testDiv = document.createElement('div');\n            try {\n                isTop = window.frameElement === null;\n            } catch (e) {}\n\n            //DOMContentLoaded approximation that uses a doScroll, as found by\n            //Diego Perini: http://javascript.nwbox.com/IEContentLoaded/,\n            //but modified by other contributors, including jdalton\n            if (testDiv.doScroll && isTop && window.external) {\n                scrollIntervalId = setInterval(function () {\n                    try {\n                        testDiv.doScroll();\n                        pageLoaded();\n                    } catch (e) {}\n                }, 30);\n            }\n        }\n\n        //Check if document already complete, and if so, just trigger page load\n        //listeners. Latest webkit browsers also use \"interactive\", and\n        //will fire the onDOMContentLoaded before \"interactive\" but not after\n        //entering \"interactive\" or \"complete\". More details:\n        //http://dev.w3.org/html5/spec/the-end.html#the-end\n        //http://stackoverflow.com/questions/3665561/document-readystate-of-interactive-vs-ondomcontentloaded\n        //Hmm, this is more complicated on further use, see \"firing too early\"\n        //bug: https://github.com/requirejs/domReady/issues/1\n        //so removing the || document.readyState === \"interactive\" test.\n        //There is still a window.onload binding that should get fired if\n        //DOMContentLoaded is missed.\n        if (document.readyState === \"complete\") {\n            pageLoaded();\n        }\n    }\n\n    /** START OF PUBLIC API **/\n\n    /**\n     * Registers a callback for DOM ready. If DOM is already ready, the\n     * callback is called immediately.\n     * @param {Function} callback\n     */\n    function domReady(callback) {\n        if (isPageLoaded) {\n            callback(doc);\n        } else {\n            readyCalls.push(callback);\n        }\n        return domReady;\n    }\n\n    domReady.version = '2.0.1';\n\n    /**\n     * Loader Plugin API method\n     */\n    domReady.load = function (name, req, onLoad, config) {\n        if (config.isBuild) {\n            onLoad(null);\n        } else {\n            domReady(onLoad);\n        }\n    };\n\n    /** END OF PUBLIC API **/\n\n    return domReady;\n});","Temando_Shipping/js/action/save-search-request.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'Magento_Checkout/js/model/url-builder',\n    'Magento_Customer/js/model/customer',\n    'mage/storage',\n    'Magento_Checkout/js/model/quote',\n    'Temando_Shipping/js/model/cache-service',\n    'Magento_Checkout/js/model/shipping-service',\n    'Temando_Shipping/js/model/collection-points'\n], function (urlBuilder, customer, storage, quote, cacheService, shippingService, collectionPoints) {\n    'use strict';\n\n    return function (postCode, countryId) {\n\n        shippingService.isLoading(true);\n        var url, urlParams, serviceUrl, payload;\n        if (customer.isLoggedIn()) {\n            url = '/carts/mine/collection-point/search-request';\n            urlParams = {};\n        } else {\n            url = '/guest-carts/:cartId/collection-point/search-request';\n            urlParams = {\n                cartId: quote.getQuoteId()\n            };\n        }\n        payload = {postcode: postCode, countryId: countryId};\n        serviceUrl = urlBuilder.createUrl(url, urlParams);\n\n        return storage.put(\n            serviceUrl,\n            JSON.stringify(payload)\n        ).success(\n            function (response) {\n                if (quote.shippingAddress()) {\n                    // if a shipping address was selected, clear shipping rates cache\n                    cacheService.invalidateCacheForAddress(quote.shippingAddress());\n                    quote.shippingAddress.valueHasMutated();\n                } else {\n                    // otherwise stop spinner, no new rates to display\n                    shippingService.isLoading(false);\n                }\n\n                var subscription = shippingService.getShippingRates().subscribe(function() {\n                    shippingService.isLoading(true);\n                    collectionPoints.reloadCheckoutData().always(function () {\n                        shippingService.isLoading(false);\n                    });\n                    subscription.dispose();\n                });\n\n\n            }\n        ).fail(\n            function () {\n                shippingService.isLoading(false);\n            }\n        );\n    };\n});\n","Temando_Shipping/js/action/save-service-selection.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'underscore',\n    'Magento_Checkout/js/model/url-builder',\n    'Magento_Customer/js/model/customer',\n    'mage/storage',\n    'Magento_Checkout/js/model/quote',\n    'Temando_Shipping/js/model/cache-service',\n    'Magento_Checkout/js/model/shipping-service'\n], function (_, urlBuilder, customer, storage, quote, cacheService, shippingService) {\n    'use strict';\n\n    return function (serviceSelection) {\n\n        shippingService.isLoading(true);\n        var url, urlParams, serviceUrl, payload;\n        if (customer.isLoggedIn()) {\n            url = '/carts/mine/checkout-fields';\n            urlParams = {};\n        } else {\n            url = '/guest-carts/:cartId/checkout-fields';\n            urlParams = {\n                cartId: quote.getQuoteId()\n            };\n        }\n\n        var services = [];\n        _.each(serviceSelection, function (service) {\n            services.push(\n                {\n                    attributeCode: service.id,\n                    value: service.value()\n                }\n            );\n        });\n\n\n        payload = {serviceSelection: services};\n        serviceUrl = urlBuilder.createUrl(url, urlParams);\n\n        return storage.post(\n            serviceUrl,\n            JSON.stringify(payload)\n        ).success(\n            function (response) {\n                if (quote.shippingAddress()) {\n                    // if a shipping address was selected, clear shipping rates cache\n                    cacheService.invalidateCacheForAddress(quote.shippingAddress());\n                    quote.shippingAddress.valueHasMutated();\n                } else {\n                    // otherwise stop spinner, no new rates to display\n                    shippingService.isLoading(false);\n                }\n            }\n        ).fail(\n            function () {\n                shippingService.isLoading(false);\n            }\n        );\n    };\n});\n","Temando_Shipping/js/action/select-delivery-option.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'underscore',\n    'Magento_Checkout/js/model/url-builder',\n    'Magento_Customer/js/model/customer',\n    'mage/storage',\n    'Magento_Checkout/js/model/quote',\n    'Magento_Checkout/js/model/shipping-service',\n    'Temando_Shipping/js/model/cache-service',\n    'Temando_Shipping/js/model/collection-points',\n    'Temando_Shipping/js/model/pickup-locations'\n], function (_, urlBuilder, customer, storage, quote, shippingService, cacheService, collectionPoints, pickupLocations) {\n    'use strict';\n    var deliveryOptions = {\n        clickAndCollect: pickupLocations,\n        toCollectionPoint: collectionPoints\n    };\n    return function (value) {\n        shippingService.isLoading(true);\n\n        var url, urlParams, serviceUrl;\n        if (customer.isLoggedIn()) {\n            url = '/carts/mine/delivery-option';\n            urlParams = {};\n        } else {\n            url = '/guest-carts/:cartId/delivery-option';\n            urlParams = {\n                cartId: quote.getQuoteId()\n            };\n        }\n        var payload = {cartId: quote.getQuoteId(), selectedOption: value};\n        serviceUrl = urlBuilder.createUrl(url, urlParams);\n\n        return storage.post(\n            serviceUrl,\n            JSON.stringify(payload)\n        ).success(function () {\n            if (quote.shippingAddress()) {\n                // if a shipping address was selected, clear shipping rates cache\n                cacheService.invalidateCacheForAddress(quote.shippingAddress());\n                quote.shippingAddress.valueHasMutated();\n            } else {\n                // otherwise stop spinner, no new rates to display\n                shippingService.isLoading(false);\n            }\n\n            var subscription = shippingService.getShippingRates().subscribe(function () {\n                _.each(deliveryOptions, function (option) {\n                    option.clear();\n                });\n                if (deliveryOptions[value]) {\n                    deliveryOptions[value].reloadCheckoutData();\n                }\n                subscription.dispose();\n            });\n        }).fail(function () {\n            shippingService.isLoading(false);\n        });\n    };\n});\n","Temando_Shipping/js/action/select-pickup-location.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'Magento_Checkout/js/model/url-builder',\n    'Magento_Customer/js/model/customer',\n    'mage/storage',\n    'Magento_Checkout/js/model/quote',\n    'Temando_Shipping/js/model/cache-service',\n    'Magento_Checkout/js/model/shipping-service'\n], function (urlBuilder, customer, storage, quote, cacheService, shippingService) {\n    'use strict';\n\n    return function (selectedValue) {\n\n        var url, urlParams, serviceUrl;\n        if (customer.isLoggedIn()) {\n            url = '/carts/mine/checkout-pickup-location/select';\n            urlParams = {};\n        } else {\n            url = '/guest-carts/:cartId/checkout-pickup-location/select';\n            urlParams = {\n                cartId: quote.getQuoteId()\n            };\n        }\n        var payload = {pickupLocationId: selectedValue};\n        serviceUrl = urlBuilder.createUrl(url, urlParams);\n\n        shippingService.isLoading(true);\n\n        return storage.post(\n            serviceUrl,\n            JSON.stringify(payload)\n        ).success(\n            function (response) {\n                if (quote.shippingAddress()) {\n                    // if a shipping address was selected, clear shipping rates cache\n                    cacheService.invalidateCacheForAddress(quote.shippingAddress());\n                    quote.shippingAddress.valueHasMutated();\n                } else {\n                    // otherwise stop spinner, no new rates to display\n                    shippingService.isLoading(false);\n                }\n            }\n        ).fail(\n            function () {\n                shippingService.isLoading(false);\n            }\n        );\n    };\n});\n","Temando_Shipping/js/action/select-search-result.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'Magento_Checkout/js/model/url-builder',\n    'Magento_Customer/js/model/customer',\n    'mage/storage',\n    'Magento_Checkout/js/model/quote',\n    'Temando_Shipping/js/model/cache-service',\n    'Magento_Checkout/js/model/shipping-service'\n], function (urlBuilder, customer, storage, quote, cacheService, shippingService) {\n    'use strict';\n\n    return function (selectedValue) {\n\n        var url, urlParams, serviceUrl;\n        if (customer.isLoggedIn()) {\n            url = '/carts/mine/checkout-collection-point/select';\n            urlParams = {};\n        } else {\n            url = '/guest-carts/:cartId/checkout-collection-point/select';\n            urlParams = {\n                cartId: quote.getQuoteId()\n            };\n        }\n        var payload = {collectionPointId: selectedValue};\n        serviceUrl = urlBuilder.createUrl(url, urlParams);\n\n        shippingService.isLoading(true);\n\n        return storage.post(\n            serviceUrl,\n            JSON.stringify(payload)\n        ).success(\n            function (response) {\n                if (quote.shippingAddress()) {\n                    // if a shipping address was selected, clear shipping rates cache\n                    cacheService.invalidateCacheForAddress(quote.shippingAddress());\n                    quote.shippingAddress.valueHasMutated();\n                } else {\n                    // otherwise stop spinner, no new rates to display\n                    shippingService.isLoading(false);\n                }\n            }\n        ).fail(\n            function () {\n                shippingService.isLoading(false);\n            }\n        );\n    };\n});\n","Temando_Shipping/js/model/cache-service.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'Magento_Checkout/js/model/shipping-rate-registry'\n], function (rateRegistry) {\n    'use strict';\n\n    return {\n        invalidateCacheForAddress: function(address) {\n            var cacheKey = address.getCacheKey();\n            rateRegistry.set(cacheKey, null);\n        }\n    };\n});\n","Temando_Shipping/js/model/collection-points.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'underscore',\n    'jquery',\n    'Magento_Customer/js/customer-data',\n    'mage/translate'\n], function (_,$,customerData) {\n    'use strict';\n\n    var cacheKey = 'collection-point-result';\n    var sectionData = customerData.get(cacheKey);\n\n\n    return {\n        getCollectionPoints: function () {\n            return sectionData()['collection-points'] || [];\n        },\n\n        getMessage: function () {\n            var collectionPoints = this.getCollectionPoints();\n            var searchRequest = this.getSearchRequest();\n            var cpCount = _.size(collectionPoints);\n\n            if (_.isEmpty(searchRequest) || searchRequest.pending === true) {\n                return $.mage.__('Enter country and postal code to search for a collection point.');\n            } else if (_.isEmpty(collectionPoints) && _.size(searchRequest) > 0) {\n                return $.mage.__('No collection points found.');\n            } else {\n                return $.mage.__('There were %1 results for your search.').replace('%1', cpCount);\n            }\n        },\n\n        getSearchRequest: function () {\n            if (_.size(sectionData()['search-request']) > 0) {\n                return sectionData()['search-request'];\n            }\n            return false;\n        },\n\n        getSearchRequestCountryCode: function () {\n            return this.getSearchRequest().country_id || '';\n        },\n\n        getSearchRequestPostCode: function () {\n            return this.getSearchRequest().postcode || '';\n        },\n\n        selectCollectionPoint: function (collectionPointId) {\n            var collectionPoints = this.getCollectionPoints();\n            var searchRequest = this.getSearchRequest();\n\n            _.each(collectionPoints, function (collectionPoint) {\n                collectionPoint.selected = (collectionPoint.collection_point_id === collectionPointId);\n            });\n\n            customerData.set(cacheKey, {\n                'collection-points': collectionPoints,\n                'search-request': searchRequest\n            });\n        },\n\n        getSelectedCollectionPoint: function () {\n            var collectionPoints = this.getCollectionPoints();\n            var selectedPoint = collectionPoints.filter(function (element) {\n                return element.selected;\n            });\n\n            if (selectedPoint.length === 0) {\n                return false;\n            } else {\n                return selectedPoint;\n            }\n        },\n\n        reloadCheckoutData: function () {\n            return customerData.reload([cacheKey]);\n        },\n\n        clear: function() {\n            customerData.set(cacheKey, {\n                'collection-points': [],\n                'search-request': {}\n            });\n        }\n    };\n});\n","Temando_Shipping/js/model/delivery-options.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'ko',\n    'Temando_Shipping/js/model/collection-points',\n    'Temando_Shipping/js/model/pickup-locations'\n], function (ko, collectionPoints, pickupLocations) {\n    'use strict';\n\n\n    var userValue = ko.observable('');\n    var selected = ko.pureComputed({\n        read: function() {\n            if (userValue() === '') {\n                if (collectionPoints.getSearchRequest()) {\n                   return  'toCollectionPoint';\n                }\n                if (pickupLocations.getSearchRequest()) {\n                    return  'clickAndCollect';\n                }\n                return 'toAddress';\n            } else {\n                return userValue();\n            }\n        },\n        write: function(value) {\n            userValue(value);\n        }\n    });\n    var collectionPointSelected = ko.computed(function () {\n        return (selected() === 'toCollectionPoint');\n    });\n    var toAddressSelected = ko.computed(function () {\n        return (selected() === 'toAddress');\n    });\n\n    var clickAndCollectSelected = ko.computed(function () {\n        return (selected() === 'clickAndCollect');\n    });\n\n    return {\n        selected: selected,\n        isCollectionPointSelected: collectionPointSelected,\n        isToAddressSelected: toAddressSelected\n    };\n});\n","Temando_Shipping/js/model/fields-definition.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'underscore',\n    'ko',\n    'Magento_Customer/js/customer-data'\n], function (_, ko, customerData) {\n    'use strict';\n\n    var cacheKey = 'checkout-fields';\n\n    return {\n        getFields: function () {\n            var sectionData = customerData.get(cacheKey);\n\n            _.each(sectionData().fields, function (field) {\n                if ((field.value === undefined) && field.defaultValue) {\n                    field.value = field.defaultValue;\n                }\n            });\n\n            return sectionData().fields;\n        },\n\n        updateFieldValue: function (fieldId, fieldValue) {\n            var sectionData = customerData.get(cacheKey);\n\n            if (fieldValue === undefined) {\n                fieldValue = '';\n            }\n\n            _.each(sectionData().fields, function (field) {\n                if (field.id === fieldId) {\n                    field.value = fieldValue;\n                }\n            });\n\n            customerData.set(cacheKey, sectionData());\n        }\n    };\n});\n","Temando_Shipping/js/model/pickup-locations.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'underscore',\n    'jquery',\n    'Magento_Customer/js/customer-data',\n    'mage/translate'\n], function (_, $, customerData) {\n    'use strict';\n\n    var cacheKey = 'pickup-location-result';\n    var sectionData = customerData.get(cacheKey);\n\n\n    return {\n        getPickupLocations: function () {\n            return sectionData()['pickup-locations'] || [];\n        },\n\n        getMessage: function () {\n            var locations = this.getPickupLocations();\n            var searchRequest = this.getSearchRequest();\n            var locationsCount = _.size(locations);\n\n            if (_.isEmpty(searchRequest)) {\n                return $.mage.__('Please wait.');\n            } else if (_.isEmpty(locations) && _.size(searchRequest) > 0) {\n                return $.mage.__('No pickup locations found.');\n            } else {\n                return $.mage.__('There were %1 results for your search.').replace('%1', locationsCount);\n            }\n        },\n\n        getSearchRequest: function () {\n            if (_.size(sectionData()['search-request']) > 0) {\n                return sectionData()['search-request'];\n            }\n            return false;\n        },\n\n        selectPickupLocation: function (pickupLocationId) {\n            var pickupLocations = this.getPickupLocations();\n            var searchRequest = this.getSearchRequest();\n\n            _.each(pickupLocations, function (pickupLocation) {\n                pickupLocation.selected = (pickupLocation.pickup_location_id === pickupLocationId);\n            });\n\n            customerData.set(cacheKey, {\n                'pickup-locations': pickupLocations,\n                'search-request': searchRequest\n            });\n        },\n\n        getSelectedPickupLocation: function () {\n            var locations = this.getPickupLocations();\n            var selectedLocation = locations.filter(function (element) {\n                return element.selected;\n            });\n\n            if (selectedLocation.length === 0) {\n                return false;\n            } else {\n                return selectedLocation;\n            }\n        },\n\n        reloadCheckoutData: function () {\n            return customerData.reload([cacheKey]);\n        },\n\n        clear: function() {\n            customerData.set(cacheKey, {\n                'pickup-locations': [],\n                'search-request': {}\n            });\n        }\n    };\n});\n","Temando_Shipping/js/model/url.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\ndefine([], function () {\n    'use strict';\n\n    var pickupForwardUrlTemplate = '--id--';\n\n    return {\n        /**\n         * @param {String} urlTemplate\n         */\n        setPickupForwardUrlTemplate: function (urlTemplate) {\n            pickupForwardUrlTemplate = urlTemplate;\n        },\n\n        /**\n         * @param {String} pickupId\n         */\n        buildPickupForwardUrl: function (pickupId) {\n            return pickupForwardUrlTemplate.replace('--id--', pickupId);\n        }\n    };\n});\n","Temando_Shipping/js/model/shipping-rates-validation-rules/temando.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([], function () {\n    'use strict';\n\n    return {\n        /**\n         * @return {Object}\n         */\n        getRules: function () {\n            return {\n                'lastname': {\n                    'required': false\n                },\n                'postcode': {\n                    'required': false\n                },\n                'city': {\n                    'required': false\n                },\n                'country_id': {\n                    'required': true\n                }\n            };\n        }\n    };\n});\n","Temando_Shipping/js/model/shipping-rates-validator/temando.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'jquery',\n    'mageUtils',\n    'temandoShippingRatesValidationRules',\n    'mage/translate'\n], function ($, utils, validationRules, $t) {\n    'use strict';\n\n    return {\n        validationErrors: [],\n\n        /**\n         * @param {Object} address\n         * @return {Boolean}\n         */\n        validate: function (address) {\n            var self = this;\n\n            this.validationErrors = [];\n            $.each(validationRules.getRules(), function (field, rule) {\n                var message;\n\n                if (rule.required && utils.isEmpty(address[field])) {\n                    message = $t('Field ') + field + $t(' is required.');\n                    self.validationErrors.push(message);\n                }\n            });\n\n            return !this.validationErrors.length;\n        }\n    };\n});\n","Temando_Shipping/js/view/checkout/shipping/checkout-fields.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'underscore',\n    'uiComponent',\n    'ko',\n    'temandoCheckoutFieldsDefinition',\n    'Magento_Checkout/js/model/quote',\n    'temandoDeliveryOptions',\n    'Temando_Shipping/js/action/save-service-selection'\n], function (_, Component, ko, fieldsDefinition, quote, deliveryOptions, saveServiceSelection) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Temando_Shipping/checkout/shipping/checkout-fields',\n            fields: []\n        },\n        checkoutFieldsVisible: deliveryOptions.isToAddressSelected,\n\n        /**\n         *\n         * @returns {*} Array of fields with observable values\n         */\n        getFields: function () {\n            if (_.isEmpty(this.fields)) {\n                _.each(fieldsDefinition.getFields(), function (fieldDefinition) {\n                    // init field for template rendering\n                    var field = {\n                        id: fieldDefinition.id,\n                        label: fieldDefinition.label,\n                        type: fieldDefinition.type,\n                        options: fieldDefinition.options,\n                        value: ko.observable(fieldDefinition.value)\n                    };\n\n                    field.value.subscribe(function (fieldValue) {\n                        // on value change, update section data and trigger rate request\n                        fieldsDefinition.updateFieldValue(fieldDefinition.id, fieldValue);\n\n                        saveServiceSelection(this.fields);\n                    }, this);\n                    // push field definition to component property for template rendering\n                    this.fields.push(field);\n                }, this);\n            }\n\n            return this.fields;\n        }\n    });\n});\n","Temando_Shipping/js/view/checkout/shipping/collection-points-form.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'underscore',\n    'uiComponent',\n    'ko',\n    'Temando_Shipping/js/model/collection-points',\n    'Temando_Shipping/js/action/save-search-request',\n    'Temando_Shipping/js/action/select-search-result'\n], function (_, Component, ko, collectionPoints, searchAction, selectCollectionPointAction) {\n    'use strict';\n\n    var selectedCollectionPoint = ko.observable(false),\n        initializeZipCode =  collectionPoints.getSearchRequestPostCode(),\n        initializeCountryCode = collectionPoints.getSearchRequestCountryCode(),\n        readSelected = function () {\n            if (selectedCollectionPoint()) {\n                return selectedCollectionPoint();\n            } else {\n                var selected = collectionPoints.getCollectionPoints().find(function (element) {\n                    return element.selected;\n                });\n\n                return selected ? selected.collection_point_id : false;\n            }\n        },\n        writeSelected = function (value) {\n            selectCollectionPointAction(value);\n            collectionPoints.selectCollectionPoint(value);\n        };\n\n    return Component.extend({\n        defaults: {\n            template: 'Temando_Shipping/checkout/shipping/delivery-options'\n        },\n        selectedCollectionPoint: selectedCollectionPoint,\n        selected: ko.pureComputed({\n            read: readSelected,\n            write: writeSelected,\n            owner: this\n        }),\n        zipCodeError: ko.observable(''),\n        zipValue: ko.observable(initializeZipCode),\n        countryValue: ko.observable(initializeCountryCode),\n\n        getCountryData: function () {\n            var result = [];\n            var countryData = window.checkoutConfig['ts-cp-countries'];\n            _.each(countryData, function (country) {\n                result.push({\n                    'countryCode': country.value,\n                    'countryName': country.label\n                });\n            });\n\n            return result;\n        },\n\n        getCollectionPoints: function () {\n            return collectionPoints.getCollectionPoints();\n        },\n\n        getMessage: function () {\n            return collectionPoints.getMessage();\n        },\n\n        hasNoResult: function () {\n            var result = false;\n            if (collectionPoints.getSearchRequestPostCode() && this.getCollectionPoints().length < 1) {\n                result = true;\n            }\n            return result;\n        },\n\n        /**\n         * @return {null}\n         */\n        submitForm: function () {\n            if (this.zipValue().trim().length) {\n                // Call request for saving the fields into a table\n                searchAction(this.zipValue(), this.countryValue());\n                this.zipCodeError('');\n            } else {\n                this.zipCodeError('This is a required field.');\n            }\n        }\n    });\n});\n","Temando_Shipping/js/view/checkout/shipping/delivery-options.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'ko',\n    'uiComponent',\n    'temandoDeliveryOptions',\n    'Temando_Shipping/js/action/select-delivery-option'\n], function (ko, Component, deliveryOptions, selectDeliveryOption) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Temando_Shipping/checkout/shipping/delivery-options'\n        },\n\n        deliveryOptions: ko.observableArray(window.checkoutConfig['delivery-options']),\n        radioSelectedOptionValue: deliveryOptions.selected,\n        collectionPointsVisible: ko.computed(function () {\n            return deliveryOptions.selected() === 'toCollectionPoint';\n        }),\n        clickAndCollectVisible: ko.computed(function () {\n            return deliveryOptions.selected() === 'clickAndCollect';\n        }),\n\n        initialize: function () {\n            this._super();\n            var self = this;\n            self.radioSelectedOptionValue.subscribe(function (value) {\n                selectDeliveryOption(value);\n            });\n        }\n    });\n});\n","Temando_Shipping/js/view/checkout/shipping/pickup-locations-form.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'underscore',\n    'uiComponent',\n    'ko',\n    'Temando_Shipping/js/model/pickup-locations',\n    'Temando_Shipping/js/action/select-pickup-location'\n], function (_, Component, ko, pickupLocations, selectPickupLocationAction) {\n    'use strict';\n\n    var selectedPickupLocation = ko.observable(false),\n        readSelected = function () {\n            if (selectedPickupLocation()) {\n                return selectedPickupLocation();\n            } else {\n                var selected = pickupLocations.getPickupLocations().find(function (element) {\n                    return element.selected;\n                });\n\n                return selected ? selected.pickup_location_id : false;\n            }\n        },\n        writeSelected = function (value) {\n            selectPickupLocationAction(value);\n            pickupLocations.selectPickupLocation(value);\n        };\n\n    return Component.extend({\n        defaults: {\n            template: 'Temando_Shipping/checkout/shipping/delivery-options'\n        },\n        selectedPickupLocation: selectedPickupLocation,\n        selected: ko.pureComputed({\n            read: readSelected,\n            write: writeSelected,\n            owner: this\n        }),\n\n        getPickupLocations: function () {\n            return pickupLocations.getPickupLocations();\n        },\n\n        getMessage: function () {\n            return pickupLocations.getMessage();\n        },\n\n        hasNoResult: function () {\n            var result = false;\n            if (this.getPickupLocations().length < 1) {\n                result = true;\n            }\n            return result;\n        }\n    });\n});\n","Temando_Shipping/js/view/checkout/shipping-information/address-renderer/shipping.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'underscore',\n    'uiComponent',\n    'Magento_Customer/js/customer-data',\n    'Temando_Shipping/js/model/collection-points',\n    'Temando_Shipping/js/model/pickup-locations'\n], function (_, Component, customerData, collectionPoints, pickupLocations) {\n    'use strict';\n\n    var countryData = customerData.get('directory-data');\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_Checkout/shipping-information/address-renderer/default'\n        },\n        collectionPoints: collectionPoints,\n        pickupLocations: pickupLocations,\n\n        /**\n         * @param {*} countryId\n         * @return {String}\n         */\n        getCountryName: function (countryId) {\n            return countryData()[countryId] != undefined ? countryData()[countryId].name : ''; //eslint-disable-line\n        },\n\n        getRegionNameByCode: function (countryId, regionCode) {\n            var result = regionCode;\n            var countryRegions = countryData()[countryId].regions || {};\n\n            if (_.size(countryRegions) > 0) {\n                var region = _.filter(countryRegions, (function (element) {\n                        return element.code === regionCode;\n                    })\n                );\n\n                if (region.length > 0) {\n                    result = region[0].name;\n                }\n            }\n\n            return result;\n        },\n\n        getTemplate: function () {\n            var collectionPoint = collectionPoints.getSelectedCollectionPoint();\n            if (collectionPoint) {\n                return 'Temando_Shipping/checkout/shipping/address-renderer/collection-point';\n            }\n            var pickupLocation = pickupLocations.getSelectedPickupLocation();\n            if (pickupLocation) {\n                return 'Temando_Shipping/checkout/shipping/address-renderer/pickup-location';\n            }\n            // handle other specific adresses here\n            return this.template;\n        }\n    });\n});\n","Temando_Shipping/js/view/shipping-rates-validation/temando.js":"/**\n * Refer to LICENSE.txt distributed with the Temando Shipping module for notice of license\n */\n\ndefine([\n    'uiComponent',\n    'Magento_Checkout/js/model/shipping-rates-validator',\n    'Magento_Checkout/js/model/shipping-rates-validation-rules',\n    'temandoShippingRatesValidator',\n    'temandoShippingRatesValidationRules'\n], function (\n    Component,\n    defaultShippingRatesValidator,\n    defaultShippingRatesValidationRules,\n    temandoShippingRatesValidator,\n    temandoShippingRatesValidationRules\n) {\n    'use strict';\n\n    defaultShippingRatesValidator.registerValidator('temando', temandoShippingRatesValidator);\n    defaultShippingRatesValidationRules.registerRules('temando', temandoShippingRatesValidationRules);\n\n    return Component;\n});\n","Vertex_AddressValidation/js/action/set-address-for-validation.js":"/**\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\n * @author     Mediotype                     https://www.mediotype.com/\n */\n\n/**\n * @api\n */\ndefine([\n    'jquery',\n    'Magento_Checkout/js/model/url-builder',\n    'mage/storage',\n    'Magento_Checkout/js/model/error-processor',\n    'Magento_Ui/js/model/messageList',\n    'Magento_Checkout/js/model/full-screen-loader'\n], function (\n    $,\n    urlBuilder,\n    storage,\n    errorProcessor,\n    messageContainer,\n    fullScreenLoader\n) {\n    'use strict';\n\n    return function (address) {\n        var serviceUrl,\n            payload;\n\n        serviceUrl = urlBuilder.createUrl('/vertex-address-validation/vertex-address', {});\n        payload = {\n            address: address\n        };\n\n        fullScreenLoader.startLoader();\n\n        return storage.post(\n            serviceUrl,\n            JSON.stringify(payload)\n        ).fail(\n            function (response) {\n                errorProcessor.process(response, messageContainer);\n                fullScreenLoader.stopLoader();\n            }\n        );\n    };\n});\n","Vertex_AddressValidation/js/model/validation.js":"define([\n    'jquery',\n    'underscore',\n    'Magento_Checkout/js/checkout-data',\n    'Magento_Checkout/js/action/create-shipping-address',\n    'Magento_Checkout/js/action/select-shipping-address',\n    'Magento_Customer/js/model/customer',\n    'mage/translate'\n], function (\n    $,\n    _,\n    checkoutData,\n    createShippingAddress,\n    selectShippingAddress,\n    customer,\n    $t\n) {\n    'use strict';\n\n    return {\n        message: {\n            messageText: $t('The address is valid'),\n            differences: [],\n            type: 0,\n            class: 'message success'\n        },\n        addressFieldsForValidation: ['city', 'postcode', 'street'],\n\n        /**\n         * Will check if the response is different, same or invalid\n         *\n         * @param {Object} apiResponse\n         * @param {Boolean} isBilling\n         * @returns {*|exports.message|{messageText, differences, type, class}}\n         */\n        resolveAddressDifference: function (apiResponse, isBilling) {\n            var differences = [],\n                valid = [],\n                addressFromData;\n\n            if (isBilling) {\n                addressFromData = checkoutData.getBillingAddressFromData();\n            } else {\n                addressFromData = checkoutData.getShippingAddressFromData();\n            }\n\n            if (this.invalidErrorResponse(apiResponse)) {\n                return this.warningOrNoResponseMessage([]);\n            }\n\n            _.each(this.addressFieldsForValidation, function (v, i) {\n                var responseValue, value, name, isComplex,\n                    complexValues = [],\n                    isDifferent = false;\n\n                isComplex = _.isObject(addressFromData[v]) || _.isArray(addressFromData[v]);\n\n                if (apiResponse[v] !== addressFromData[v]) {\n\n                    if (isComplex) {\n                        _.each(addressFromData[v], function (val, index) {\n                            if (val && apiResponse[v][index] && val !== apiResponse[v][index]) {\n                                complexValues[index] = apiResponse[v][index];\n                                isDifferent = true;\n                            }\n                        });\n                    }\n\n                    if (!isDifferent && isComplex) {\n                        valid[i] = v;\n                    }\n\n                    responseValue = apiResponse[v];\n\n                    if (complexValues.length) {\n                        responseValue = complexValues.join(', ');\n                    }\n\n                    if (!complexValues.length && _.isArray(responseValue) || responseValue === null) {\n                        return;\n                    }\n\n                    value = responseValue.substr(0, 1).toUpperCase() + responseValue.substr(1);\n                    name = v.substr(0, 1).toUpperCase() + v.substr(1);\n                    differences.push({\n                        value: value,\n                        name: name\n                    });\n\n                    return;\n                }\n                valid[i] = v;\n            });\n\n            if (valid.length === this.addressFieldsForValidation.length && _.isEmpty(differences)) {\n                return this.successMessage(false);\n            }\n\n            return this.warningOrNoResponseMessage(differences);\n        },\n\n        /**\n         * Will updated the local storage based on user type\n         *\n         * @param {String} validAddressStorage\n         * @returns {*|exports.message|{messageText, differences, type, class}}\n         */\n        resolveShippingAddressInvalid: function (validAddressStorage) {\n            var addressFromData, newShippingAddress;\n\n            addressFromData = this.updateAddressFormData(validAddressStorage);\n\n            if (customer.isLoggedIn) {\n                newShippingAddress = createShippingAddress(addressFromData);\n                selectShippingAddress(newShippingAddress);\n                checkoutData.setSelectedShippingAddress(newShippingAddress.getKey());\n                checkoutData.setNewCustomerShippingAddress($.extend(true, {}, addressFromData));\n            } else {\n                checkoutData.setShippingAddressFromData(addressFromData);\n            }\n\n            return this.successMessage(true);\n        },\n\n        /**\n         * Will updated the local storage based on user type\n         *\n         * @param {String} validAddressStorage\n         * @returns {*|exports.message|{messageText, differences, type, class}}\n         */\n        resolveBillingAddressInvalid: function (validAddressStorage) {\n            var addressFromData = this.updateAddressFormData(validAddressStorage, true);\n\n            checkoutData.setBillingAddressFromData(addressFromData);\n\n            return this.successMessage(true);\n        },\n\n        /**\n         * Will update the data storage with the values from the api response\n         *\n         * @param {String} validAddressStorage\n         * @param {Boolean} isBilling\n         * @returns {*}\n         */\n        updateAddressFormData: function (validAddressStorage, isBilling) {\n            var addressFromData,\n                validResponse = JSON.parse(validAddressStorage),\n                self = this;\n\n            if (isBilling) {\n                addressFromData = checkoutData.getBillingAddressFromData();\n            } else {\n                addressFromData = checkoutData.getShippingAddressFromData();\n            }\n\n            _.each(this.addressFieldsForValidation, function (v) {\n                var fieldValue = validResponse[v],\n                    linesObj = {};\n\n                if (_.isObject(addressFromData[v])) {\n                    _.each(addressFromData[v], function (val, i) {\n                        if (fieldValue[i]) {\n                            linesObj[i] = fieldValue[i];\n                            self.updateFields(v + '[' + i + ']', fieldValue, false);\n\n                            return;\n                        }\n                        linesObj[i] = val;\n                    });\n                    addressFromData[v] = linesObj;\n\n                    return;\n                }\n\n                addressFromData[v] = fieldValue;\n                self.updateFields(v, fieldValue, false);\n            });\n\n            return addressFromData;\n        },\n\n        /**\n         * Update validated fields\n         *\n         * @param {String} name\n         * @param {String} value\n         * @param {Boolean} isVisible\n         */\n        updateFields: function (name, value, isVisible) {\n            if (isVisible) {\n                $('input[name=\"' + name + '\"]:visible').val(value);\n            } else {\n                $('input[name=\"' + name + '\"]').val(value);\n            }\n        },\n\n        /**\n         * Will check if the api response found a address\n         *\n         * @param {Object} apiResponse\n         * @returns {Boolean}\n         */\n        invalidErrorResponse: function (apiResponse) {\n            var isInvalid = false;\n\n            _.each(this.addressFieldsForValidation, function (v) {\n                if (_.isArray(apiResponse[v]) && apiResponse[v][0] === '') {\n                    isInvalid = true;\n\n                    return;\n                }\n\n                if (apiResponse[v] === null) {\n                    isInvalid = true;\n                }\n            });\n\n            return isInvalid;\n        },\n\n        /**\n         * Will return the invalid and error message\n         *\n         * @param {Array} differences\n         * @returns {exports.message|{messageText, differences, type, class}}\n         */\n        warningOrNoResponseMessage: function (differences) {\n            this.message.messageText = $t('We did not find a valid address');\n\n            if (differences.length) {\n                this.message.messageText = $t('The address is not valid');\n            }\n            this.message.differences = differences;\n            this.message.type = 1;\n            this.message.class = 'message warning';\n\n            return this.message;\n        },\n\n        /**\n         * Will return the update and success message\n         *\n         * @param {Boolean} update\n         * @returns {exports.message|{messageText, differences, type, class}}\n         */\n        successMessage: function (update) {\n            this.message.messageText = $t('The address is valid');\n\n            if (update) {\n                this.message.messageText = $t('The address was updated');\n            }\n            this.message.type = 0;\n            this.message.class = 'message success';\n            this.message.differences = [];\n\n            return this.message;\n        }\n    };\n});\n","Vertex_AddressValidation/js/view/billing-validation-mixin.js":"/**\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\n * @author     Mediotype                     https://www.mediotype.com/\n */\n\ndefine([\n    'jquery',\n    'Magento_Checkout/js/checkout-data',\n    'uiRegistry'\n], function (\n    $,\n    checkoutData,\n    uiRegistry\n) {\n    'use strict';\n\n    return function (Component) {\n        return Component.extend({\n            vertexMessage: {},\n\n            /**\n             * @returns {self}\n             */\n            updateAddress: function () {\n                var self = this,\n                    config = window.checkoutConfig,\n                    validationConfig  = config.vertexAddressValidationConfig,\n                    billingData = checkoutData.getBillingAddressFromData(),\n                    componentValidation = uiRegistry.get(\n                        /*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\n                        'checkout.steps.billing-step.payment.payments-list.before-place-order.billingAdditional.billing-address-messages'\n                    );\n\n                if (!validationConfig.isAddressValidationEnabled ||\n                    !componentValidation ||\n                    billingData === null ||\n                    this.selectedAddress() && !this.isAddressFormVisible() ||\n                    validationConfig.countryValidation.indexOf(billingData.country_id) === -1\n                ) {\n                    return this._super();\n                }\n\n                $(document).on('afterValidateBilling', function (e, resp, vertexMessage, continueToNext) {\n                    if (!continueToNext && vertexMessage.type === 0) {\n                        self.vertexMessage = {};\n                        self._super();\n\n                        return;\n                    }\n\n                    if (continueToNext) {\n                        self.vertexMessage = vertexMessage;\n                    }\n                });\n\n                if (Object.values(self.vertexMessage).length > 0) {\n                    componentValidation.removeMessage();\n                    this.vertexMessage = {};\n\n                    return self._super();\n                }\n\n                componentValidation.addressValidation();\n            }\n        });\n    };\n});\n","Vertex_AddressValidation/js/view/shipping-validation-mixin.js":"/**\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\n * @author     Mediotype                     https://www.mediotype.com/\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'uiRegistry',\n    'Magento_Checkout/js/model/quote'\n], function ($, _, uiRegistry, quote) {\n    'use strict';\n\n    return function (Component) {\n        return Component.extend({\n            vertexMessage: {},\n\n            /**\n             * @inheritdoc\n             */\n            initialize: function () {\n                this._super();\n\n                $(document).on(\n                    'afterValidate',\n                    function (event, vertexMessage, stopOnSuccess) {\n                    if (!stopOnSuccess && vertexMessage.type === 0) {\n                        this.vertexMessage = vertexMessage;\n                        /*\n                         * re-trigger validation - easiest way to continue\n                         * When a vertexMessage is set, validation will allow\n                         *  the customer to proceed w/out another round of\n                         * Vertex Address Validation\n                         */\n                        this.setShippingInformation();\n                        // Clear message after continuation\n                        this.vertexMessage = {};\n                    } else {\n                        this.vertexMessage = vertexMessage;\n                    }\n                }.bind(this));\n\n                return this;\n            },\n\n            /**\n             * @return {Boolean}\n             */\n            validateShippingInformation: function () {\n                var superResult = this._super(),\n                    self = this,\n                    config = window.checkoutConfig,\n                    validationConfig = config.vertexAddressValidationConfig,\n                    shippingData = quote.shippingAddress(),\n                    componentValidation = uiRegistry.get(\n                        'checkout.steps.shipping-step.shippingAddress' +\n                        '.before-shipping-method-form.shippingAdditional' +\n                        '.shipping-address-messages'\n                    );\n\n                if (!validationConfig.isAddressValidationEnabled ||\n                    !componentValidation ||\n                    !superResult ||\n                    !quote.shippingAddress().isEditable() ||\n                    validationConfig.countryValidation.indexOf(shippingData.countryId) === -1\n                ) {\n                    return superResult;\n                }\n\n                if (Object.values(self.vertexMessage).length > 0) {\n                    componentValidation.removeMessage();\n                    this.vertexMessage = {};\n\n                    return superResult;\n                }\n\n                if (superResult) {\n                    componentValidation.addressValidation();\n\n                    return false;\n                }\n                this.vertexMessage = {};\n\n                return superResult;\n            }\n        });\n    };\n});\n","Vertex_AddressValidation/js/view/checkout/billing/address-validation.js":"/**\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\n * @author     Mediotype                     https://www.mediotype.com/\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'ko',\n    'uiComponent',\n    'Vertex_AddressValidation/js/action/set-address-for-validation',\n    'Vertex_AddressValidation/js/model/validation',\n    'Magento_Checkout/js/checkout-data',\n    'Magento_Checkout/js/model/full-screen-loader'\n], function (\n    $,\n    _,\n    ko,\n    Component,\n    setAddressActionForValidation,\n    validationModel,\n    checkoutData,\n    fullScreenLoader\n) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            messages: []\n        },\n\n        /** @inheritdoc */\n        initObservable: function () {\n            this._super().observe('messages');\n\n            return this;\n        },\n\n        /**\n         * Triggers a request to the address validation builder and adds the response\n         */\n        addressValidation: function () {\n            var self = this;\n\n            setAddressActionForValidation(checkoutData.getBillingAddressFromData()).done(\n                function (response) {\n                    var message = self.getAddressDifferenceResponse(response);\n\n                    fullScreenLoader.stopLoader();\n                    $(document).trigger('afterValidateBilling', [\n                        response,\n                        message,\n                        window.checkoutConfig.vertexAddressValidationConfig.isAlwaysShowingTheMessage\n                    ]);\n                }\n            );\n        },\n\n        /**\n         * Retrieve messages\n         *\n         * @param {Object} message\n         */\n        getMessages: function (message) {\n            this.messages.removeAll();\n            this.messages.push(message);\n        },\n\n        /**\n         * Removes all the messages\n         */\n        removeMessage: function () {\n            this.messages.removeAll();\n        },\n\n        /**\n         * Get the message with the differences\n         *\n         * @param {Object} apiResponse\n         */\n        getAddressDifferenceResponse: function (apiResponse) {\n            var message = validationModel.resolveAddressDifference(apiResponse, true);\n\n            window.localStorage.setItem('validated_billing_address', JSON.stringify(apiResponse));\n            this.getMessages(message);\n\n            return message;\n        },\n\n        /**\n         * Get the update message\n         */\n        updateVertexAddress: function () {\n            var validAddressStorage = window.localStorage.getItem('validated_billing_address'),\n                message = validationModel.resolveBillingAddressInvalid(validAddressStorage);\n\n            this.getMessages(message);\n            window.localStorage.setItem('validated_billing_address', JSON.stringify({}));\n\n            return message;\n        }\n    });\n});\n","Vertex_AddressValidation/js/view/checkout/shipping/address-validation.js":"/**\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\n * @author     Mediotype                     https://www.mediotype.com/\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'ko',\n    'uiComponent',\n    'Vertex_AddressValidation/js/action/set-address-for-validation',\n    'Vertex_AddressValidation/js/model/validation',\n    'Magento_Checkout/js/checkout-data',\n    'Magento_Checkout/js/model/full-screen-loader'\n], function (\n    $,\n    _,\n    ko,\n    Component,\n    setAddressActionForValidation,\n    validationModel,\n    checkoutData,\n    fullScreenLoader\n) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            messages: []\n        },\n\n        /** @inheritdoc */\n        initObservable: function () {\n            this._super().observe('messages');\n\n            return this;\n        },\n\n        /**\n         * Triggers a request to the address validation builder and adds the response\n         */\n        addressValidation: function () {\n            var self = this;\n\n            setAddressActionForValidation(checkoutData.getShippingAddressFromData()).done(\n                function (response) {\n                    var message = self.getAddressDifferenceResponse(response);\n\n                    fullScreenLoader.stopLoader();\n                    $(document).trigger('afterValidate', [\n                        message,\n                        window.checkoutConfig.vertexAddressValidationConfig.isAlwaysShowingTheMessage\n                    ]);\n                }\n            );\n        },\n\n        /**\n         * Retrieve messages\n         *\n         * @param {Object} message\n         */\n        getMessages: function (message) {\n            this.messages.removeAll();\n            this.messages.push(message);\n        },\n\n        /**\n         * Removes all the messages\n         */\n        removeMessage: function () {\n            this.messages.removeAll();\n        },\n\n        /**\n         * Get the message with the differences\n         *\n         * @param {Object} apiResponse\n         */\n        getAddressDifferenceResponse: function (apiResponse) {\n            var message = validationModel.resolveAddressDifference(apiResponse);\n\n            window.localStorage.setItem('validated_shipping_address', JSON.stringify(apiResponse));\n            this.getMessages(message);\n\n            return message;\n        },\n\n        /**\n         * Get the update message\n         */\n        updateVertexAddress: function () {\n            var validAddressStorage = window.localStorage.getItem('validated_shipping_address'),\n                message = validationModel.resolveShippingAddressInvalid(validAddressStorage);\n\n            this.getMessages(message);\n            window.localStorage.setItem('validated_shipping_address', JSON.stringify({}));\n\n            return message;\n        }\n    });\n});\n","Vertex_Tax/js/form/element/custom-option-flex-field-select.js":"/*\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\n * @author     Mediotype                     https://www.mediotype.com/\n */\n\ndefine(['underscore', 'Magento_Ui/js/form/element/select'], function (_, Select) {\n    'use strict';\n\n    return Select.extend({\n        /**\n         * Overwrites the parent's filter to allow for checking if a value is\n         * in an array and for allowing the value of \"unmapped\" through all\n         * filters\n         *\n         * @param {String} value\n         * @param {String} field\n         */\n        filter: function (value, field) {\n            var source = this.initialOptions,\n                result;\n\n            field = field || this.filterBy.field;\n\n            result = _.filter(source, function (item) {\n                return Array.isArray(item[field]) && item[field].includes(value) ||\n                    item[field] === value ||\n                    item.value === '' ||\n                    item.value === 'unmapped';\n            });\n\n            this.setOptions(result);\n        }\n    });\n});\n","Vertex_Tax/js/model/set-checkout-messages.js":"/**\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\n * @author     Mediotype                     https://www.mediotype.com/\n */\n\ndefine(\n    [\n        'underscore',\n        'Magento_Customer/js/customer-data',\n        'Magento_Ui/js/model/messageList'\n    ],\n    function (_, customerData, messageContainer) {\n        'use strict';\n\n        /**\n         * A utility for observing message updates in session storage. It is designed to subscribe to\n         * customer data updates and forward messages to the appropriate messageList model.\n         */\n        return function () {\n            var typeMap = {\n                    'success': 'addSuccessMessage',\n                    'warning': 'addErrorMessage',\n                    'error': 'addErrorMessage'\n                },\n\n                /**\n                 * Observe message section data changes and forward to the error processor.\n                 * @param {Object} data - The observable payload.\n                 * @return void\n                 */\n                messageSubscriptionCallback = function (data) {\n                    if ('messages' in data) {\n                        _.each(data.messages, function (message) {\n                            if (message.type in typeMap) {\n                                messageContainer[typeMap[message.type]]({\n                                    'message': message.text\n                                });\n                            }\n                        });\n                    }\n                };\n\n            customerData.get('messages').subscribe(messageSubscriptionCallback);\n        };\n    }\n);\n","Vertex_Tax/js/view/checkout/summary/tax-messages.js":"/**\n * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/\n * @author     Mediotype                     https://www.mediotype.com/\n */\n\ndefine([\n    'underscore',\n    'ko',\n    'uiComponent',\n    'Magento_Checkout/js/model/totals'\n], function (_, ko, Component, totals) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            messages: []\n        },\n\n        /** @inheritdoc */\n        initialize: function () {\n            this._super();\n            this.subscribeTotals();\n        },\n\n        /** @inheritdoc */\n        initObservable: function () {\n            this._super().observe('messages');\n            this.getMessages();\n\n            return this;\n        },\n\n        /**\n         * Retrieve messages\n         */\n        getMessages: function () {\n            var taxSegment = totals.getSegment('tax');\n\n            this.messages([]);\n\n            if (taxSegment && taxSegment['extension_attributes']) {\n                this.messages(taxSegment['extension_attributes']['vertex_tax_calculation_messages']);\n            }\n        },\n\n        /**\n         * Subscribe totals observer\n         */\n        subscribeTotals: function () {\n            var self = this;\n\n            totals.totals.subscribe(\n                function () {\n                    self.getMessages();\n                },\n                null,\n                'change'\n            );\n        }\n    });\n});\n"}
}});
